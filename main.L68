00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 10/7/2014 9:53:36 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Geometry Wars
00000000                             3  * Written by : Mahesh Velegonda
00000000                             4  * Date       : 10/2/2014
00000000                             5  * Description: Geometry wars clone in Assembly.
00000000                             6  *-----------------------------------------------------------
00000000                             7      ; first instruction of program
00000000                             8  
00000000                             9      INCLUDE     "GameVariables.x68"
00000000                            10  
00000000                            11  ALL_REG                 REG     D0-D7/A0-A6
00000000  =0000000E                 12  PRINT_STRING_NO_CR      EQU     14
00000000  =00000003                 13  PRINT_NUMBER            EQU     3
00000000  =00000009                 14  KILL_PROGRAM            EQU     9
00000000  =00000054                 15  MOVE_LINE_TRAP          EQU     84
00000000                            16  
00000000  =00000000                 17  BLACK                   EQU          $00000000
00000000  =000000FF                 18  RED                     EQU          $000000FF
00000000  =0000FF00                 19  GREEN                   EQU          $0000FF00
00000000  =00FF0000                 20  BLUE                    EQU          $00FF0000  
00000000  =00FFFFFF                 21  WHITE                   EQU          $00FFFFFF   
00000000                            22  
00000000  =0000000A                 23  SEGMENT_SIZE            EQU     10
00000000  =00FFFFFF                 24  SEGMENT_COLOR           EQU     WHITE
00000000                            25  
00000000  =000000E6                 26  SCORE_ONES_LOCATION_X       EQU     230
00000000  =000000D7                 27  SCORE_TENS_LOCATION_X       EQU     215
00000000  =000000C8                 28  SCORE_HUNDREDS_LOCATION_X   EQU     200
00000000  =000000B9                 29  SCORE_THOUSANDS_LOCATION_X  EQU     185
00000000  =000002CA                 30  SCORE_DISPLAY_LOCATION_Y    EQU     714
00000000  =00000390                 31  PLAYER_LIVES_LOCATION_X     EQU     912
00000000                            32  
00000000  =00000400                 33  SCREEN_WIDTH                EQU     1024
00000000  =00000300                 34  SCREEN_HEIGHT               EQU     768
00000000                            35  
00000000  =00000021                 36  SET_SCREEN_RESOLUTION_TRAP_CODE     EQU     33
00000000  =00000050                 37  PEN_COLOR_TRAP_CODE                 EQU     80
00000000                            38  
00000000  =0000005C                 39  SET_SCREEN_BUFFER_MODE      EQU     92     
00000000  =00000011                 40  ENABLE_DOUBLE_BUFFER_MODE          EQU     17
00000000  =00000010                 41  DISBALE_DOUBLE_BUFFER_MODE         EQU     16
00000000                            42  
00000000  =0000005E                 43  DUMP_SCREEN_BUFFER          EQU     94
00000000                            44  
00000000  =0000001E                 45  PLAYER_WIDTH                EQU     30
00000000  =0000000A                 46  PLAYER_HEIGHT               EQU     10
00000000                            47  
00000000  =00000050                 48  SET_PEN_COLOR_TRAP      EQU     80
00000000  =00000051                 49  SET_FILL_COLOR_TRAP     EQU     81
00000000                            50  
00000000  =00000057                 51  DRAW_FILLED_RECTANGLE_TRAP      EQU     87
00000000  =00000059                 52  DRAW_UNFILLED_RECTANGLE_TRAP    EQU     89
00000000                            53  
00000000  =00000005                 54  PLAYER_SPEED                    EQU     5
00000000                            55  
00000000  =0000026C                 56  GROUND                          EQU     620
00000000  =00000001                 57  GRAVITY                         EQU     1
00000000                            58  
00000000  =000001E0                 59  OBSTACLE_START_TOP_X            EQU     480
00000000  =000001F4                 60  OBSTACLE_START_TOP_Y            EQU     500
00000000  =00000208                 61  OBSTACLE_START_BOTTOM_X         EQU     520
00000000  =00000208                 62  OBSTACLE_START_BOTTOM_Y         EQU     520
00000000                            63  
00000000  =00000004                 64  OBSTACLE_SPEED_FRACTION         EQU     4
00000000                            65  
00000000  =00000010                 66  JUMP_MAGNITUDE                  EQU     16
00000000                            67      
00000000                            68  
00000000  =00000008                 69  GET_TIME_COMMAND        equ     8
00000000                            70  
00000000  =00005678                 71  LARGE_NUMBER            equ     $5678
00000000  =00001234                 72  LARGE_NUMBER1           equ     $1234
00000000                            73  
00000000                            74  
00000000                            75  
00000000                            76  
00000000                            77  
00000000                            78  
00000000                            79  
00000000                            80  
00000000                            81  
00000000                            82  
00000000                            83  
00000000                            84  
00000000                            85  
00000000                            86  
00000000                            87  
00000000                            88  
00000000                            89  
00000000                            90  
00000000                            91  
00000000                            92  
00000000                            93  
00000000                            94  
00000000                            95  
00000000                            96  
00000000                            97  
00000000                            98  
00000000                            99  
00000000                           100  
00000000                           101  
00000000                           102  
00000000                           103  
00000000                           104  -------------------- end include --------------------
00000000                           105      INCLUDE     "ScoreRenderer.x68"
00000000                           106  
00000000                           107  renderScore
00000000  48E7 FFFE                108          movem.l ALL_REG,-(sp)
00000004                           109                  
00000004  222F 0044                110          move.l          68(sp),d1
00000008  2E2F 0040                111          move.l          64(sp),d7
0000000C                           112          
0000000C                           113        ;load effective address off the seven segment display table      
0000000C  43F9 0049A45E            114          lea SEVEN_SEGMENT_TABLE, a1
00000012  1A31 1000                115          move.b          (a1,d1),d5
00000016                           116          
00000016                           117          ; set pen color
00000016  223C 00FFFFFF            118          move.l #SEGMENT_COLOR,d1
0000001C  7050                     119          move.l #PEN_COLOR_TRAP_CODE,d0
0000001E  4E4F                     120          trap #15
00000020                           121                  
00000020                           122          ;and with the appropriate segment and draw1 the seven segment display
00000020  1C05                     123          move.b          d5,d6
00000022  0206 0040                124          andi.b          #$40,d6
00000026  6600 004A                125          bne             draw1SegmentA
0000002A                           126  
0000002A                           127  continue1A:        
0000002A  1C05                     128          move.b          d5,d6
0000002C  0206 0020                129          andi.b          #$20,d6
00000030  6600 0058                130          bne             draw1SegmentB
00000034                           131  
00000034                           132  continue1B:   
00000034  1C05                     133          move.b          d5,d6
00000036  0206 0010                134          andi.b          #$10,d6
0000003A  6600 006C                135          bne             draw1SegmentC
0000003E                           136  
0000003E                           137  continue1C:       
0000003E  1C05                     138          move.b          d5,d6
00000040  0206 0008                139          andi.b          #$8,d6
00000044  6600 0082                140          bne             draw1SegmentD
00000048                           141  
00000048                           142  continue1D:               
00000048  1C05                     143          move.b          d5,d6
0000004A  0206 0004                144          andi.b          #$4,d6
0000004E  6600 0092                145          bne             draw1SegmentE
00000052                           146  
00000052                           147  continue1E:       
00000052  1C05                     148          move.b          d5,d6
00000054  0206 0002                149          andi.b          #$2,d6
00000058  6600 009C                150          bne             draw1SegmentF
0000005C                           151  
0000005C                           152  continue1F:       
0000005C  1C05                     153          move.b          d5,d6
0000005E  0206 0001                154          andi.b          #$1,d6
00000062  6600 00A6                155          bne             draw1SegmentG
00000066                           156         
00000066                           157  continue1G:
00000066                           158          
00000066  103C 005E                159           move.b #DUMP_SCREEN_BUFFER,d0
0000006A  4E4F                     160           trap   #15
0000006C                           161      
0000006C                           162  
0000006C  4CDF 7FFF                163          movem.l (sp)+,ALL_REG
00000070  4E75                     164          rts
00000072                           165  
00000072                           166  draw1SegmentA:
00000072                           167          
00000072  3207                     168          move.w  d7,d1
00000074  343C 02CA                169          move.w #SCORE_DISPLAY_LOCATION_Y,d2
00000078                           170          
00000078  3007                     171          move.w  d7,d0
0000007A  0640 000A                172          addi.w  #SEGMENT_SIZE,d0
0000007E  3600                     173          move.w  d0,d3
00000080  383C 02CA                174          move.w #SCORE_DISPLAY_LOCATION_Y,d4
00000084                           175          
00000084  7054                     176          move.l  #MOVE_LINE_TRAP,d0
00000086  4E4F                     177          trap    #15              
00000088  60A0                     178          bra continue1A
0000008A                           179          
0000008A                           180  draw1SegmentB:
0000008A  3007                     181          move.w d7,d0
0000008C  0640 000A                182          addi.w  #SEGMENT_SIZE,d0
00000090  3200                     183          move.w  d0,d1
00000092  343C 02CA                184          move.w  #SCORE_DISPLAY_LOCATION_Y,d2
00000096                           185          
00000096  3007                     186          move.w  d7,d0
00000098  0640 000A                187          addi.w  #SEGMENT_SIZE,d0
0000009C  3600                     188          move.w  d0,d3
0000009E  383C 02D4                189          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d4
000000A2                           190          
000000A2  7054                     191          move.l  #MOVE_LINE_TRAP,d0
000000A4  4E4F                     192          trap    #15              
000000A6  608C                     193          bra continue1B
000000A8                           194  
000000A8                           195  draw1SegmentC:
000000A8  3007                     196          move.w  d7,d0
000000AA  0640 000A                197          addi.w  #SEGMENT_SIZE,d0
000000AE  3200                     198          move.w  d0,d1
000000B0  343C 02D4                199          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d2
000000B4                           200          
000000B4                           201          ;move.w #SCORE_DISPLAY_LOCATION_X+SEGMENT_SIZE,d3
000000B4  3007                     202          move.w  d7,d0
000000B6  0640 000A                203          addi.w  #SEGMENT_SIZE,d0
000000BA  3600                     204          move.w  d0,d3
000000BC  383C 02DE                205          move.w #SCORE_DISPLAY_LOCATION_Y+2*SEGMENT_SIZE,d4
000000C0                           206          
000000C0  7054                     207          move.l  #MOVE_LINE_TRAP,d0
000000C2  4E4F                     208          trap    #15              
000000C4  6000 FF78                209          bra continue1C
000000C8                           210  
000000C8                           211  draw1SegmentD:
000000C8                           212         ; move.w #SCORE_DISPLAY_LOCATION_X+SEGMENT_SIZE,d1
000000C8  3007                     213          move.w   d7,d0
000000CA  0640 000A                214          addi.w    #SEGMENT_SIZE,d0
000000CE  3200                     215          move.w    d0,d1
000000D0  343C 02DE                216          move.w  #SCORE_DISPLAY_LOCATION_Y+2*SEGMENT_SIZE,d2
000000D4                           217          
000000D4  3607                     218          move.w  d7,d3
000000D6  383C 02DE                219          move.w #SCORE_DISPLAY_LOCATION_Y+2*SEGMENT_SIZE,d4
000000DA                           220          
000000DA  7054                     221          move.l  #MOVE_LINE_TRAP,d0
000000DC  4E4F                     222          trap    #15              
000000DE  6000 FF68                223          bra continue1D
000000E2                           224  
000000E2                           225  draw1SegmentE:
000000E2  3207                     226          move.w d7,d1
000000E4  343C 02DE                227          move.w #SCORE_DISPLAY_LOCATION_Y+2*SEGMENT_SIZE,d2
000000E8                           228          
000000E8  3607                     229          move.w d7,d3
000000EA  383C 02D4                230          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d4
000000EE                           231          
000000EE  7054                     232          move.l  #MOVE_LINE_TRAP,d0
000000F0  4E4F                     233          trap    #15              
000000F2  6000 FF5E                234          bra continue1E
000000F6                           235  
000000F6                           236  draw1SegmentF:
000000F6  3207                     237          move.w d7,d1
000000F8  343C 02D4                238          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d2
000000FC                           239          
000000FC  3607                     240          move.w d7,d3
000000FE  383C 02CA                241          move.w #SCORE_DISPLAY_LOCATION_Y,d4
00000102                           242          
00000102  7054                     243          move.l  #MOVE_LINE_TRAP,d0
00000104  4E4F                     244          trap    #15              
00000106  6000 FF54                245          bra continue1F
0000010A                           246  
0000010A                           247  draw1SegmentG:
0000010A  3207                     248          move.w d7,d1
0000010C  343C 02D4                249          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d2
00000110                           250          
00000110  3007                     251          move.w  d7,d0
00000112  0640 000A                252          addi.w  #SEGMENT_SIZE,d0
00000116  3600                     253          move.w  d0,d3
00000118  383C 02D4                254          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d4
0000011C                           255          
0000011C  7054                     256          move.l  #MOVE_LINE_TRAP,d0
0000011E  4E4F                     257          trap    #15              
00000120  6000 FF44                258          bra continue1G
00000124                           259  
00000124                           260  
00000124                           261  
00000124                           262  
00000124                           263  
00000124                           264  
00000124                           265  
00000124                           266  
00000124                           267  
00000124                           268  
00000124                           269  
00000124                           270  
00000124                           271  
00000124                           272  
00000124                           273  
00000124                           274  -------------------- end include --------------------
00000124                           275      INCLUDE     "DrawBitmap.x68"
00000124  =00000000                276  LEFT_X  EQU     0
00000124  =00000100                277  WIDTH   EQU     256
00000124  =00000000                278  TOP_Y   EQU     0
00000124  =00000180                279  HEIGHT  EQU     384
00000124                           280  
00000124  =00000050                281  PEN_COLOR_TRAP_CODE     EQU     80
00000124  =00000052                282  DRAW_PIXEL_TRAP_CODE    EQU     82
00000124  =00000021                283  SET_OUTPUT_RESOLUTION_TRAP_CODE EQU     33
00000124  =00000400                284  OUTPUT_WIDTH        EQU     1024
00000124  =00000300                285  OUTPUT_HEIGHT       EQU     768
00000124  =000000FF                286  RECT_COLOR EQU $000000ff
00000124                           287  ;              $XXBBGGRR
00000124                           288  
00000124  =0000000A                289  SKIPBYTES_FOR_STARTOFDATA EQU   10
00000124                           290  
00000124  =00000000                291  OFFSET_X        EQU 0
00000124  =00000000                292  OFFSET_Y        EQU 0
00000124                           293  
00000124                           294  ; LEGEND
00000124                           295  ; d5 -> Address of start of data in bitmap image
00000124                           296  ; d6 -> Width of the bitmap in pixels
00000124                           297  ; d7 -> Height of the bitmap in pixels
00000124                           298  
00000124                           299  
00000124                           300  
00000124                           301  
00000124                           302  renderImage
00000124                           303  
00000124                           304          ;lea     BitmapImage, a0
00000124  2008                     305          move.l  a0, d0 
00000126                           306          
00000126  0680 0000000A            307          addi.l  #SKIPBYTES_FOR_STARTOFDATA, d0
0000012C                           308          
0000012C  2240                     309          move.l    d0,a1
0000012E  2A19                     310          move.l    (a1)+,d5 ; d5 now contains start location of data
00000130                           311          
00000130                           312          ;Convert to BigEndian
00000130  E05D                     313          ror.w #8,d5
00000132  E09D                     314          ror.l #8,d5
00000134  E09D                     315          ror.l #8,d5
00000136  E05D                     316          ror.w #8,d5
00000138                           317          
00000138  2C19                     318          move.l    (a1)+, d6 ; skip this byte 
0000013A                           319          
0000013A  2C19                     320          move.l    (a1)+,d6 ; d6 contains Width of the bitmap
0000013C                           321          ;Convert to BigEndian
0000013C  E05E                     322          ror.w #8,d6
0000013E  E09E                     323          ror.l #8,d6
00000140  E09E                     324          ror.l #8,d6
00000142  E05E                     325          ror.w #8,d6       
00000144                           326  
00000144  2E19                     327          move.l    (a1)+,d7 ; d7contains Height of the bitmap
00000146                           328          ;Convert to BigEndian
00000146  E05F                     329          ror.w #8,d7
00000148  E09F                     330          ror.l #8,d7
0000014A  E09F                     331          ror.l #8,d7
0000014C  E05F                     332          ror.w #8,d7         
0000014E                           333          
0000014E                           334          ; Make sure the input is valid
0000014E  BCB9 0049A368            335          cmp.l   (IMAGE_END_X),d6
00000154  6D00 0030                336          blt     continueCode
00000158                           337          
00000158  BEB9 0049A36C            338          cmp.l   (IMAGE_END_Y),d7
0000015E  6D00 0026                339          blt     continueCode
00000162                           340          
00000162  2039 0049A360            341          move.l  (IMAGE_START_X),d0
00000168  B0B9 0049A368            342          cmp.l   (IMAGE_END_X),d0
0000016E  6E00 0016                343          bgt     continueCode
00000172                           344          
00000172  2039 0049A364            345          move.l  (IMAGE_START_Y),d0
00000178  B0B9 0049A36C            346          cmp.l   (IMAGE_END_Y),d0
0000017E  6E00 0006                347          bgt     continueCode
00000182                           348                          
00000182  6000 0004                349          bra drawOffsetBitmap
00000186                           350  
00000186                           351  continueCode:  
00000186  4E75                     352          rts         
00000188                           353  
00000188                           354  drawOffsetBitmap:
00000188                           355          
00000188                           356          ; first determine the address of start of image offset
00000188                           357          
00000188  2039 0049A36C            358          move.l (IMAGE_END_Y),d0
0000018E  2207                     359          move.l d7,d1
00000190  9280                     360          sub.l  d0,d1 ; d1-> vertical offset of Image on screen
00000192                           361          
00000192                           362          ; bytes per row (3 * number of pixels in row)
00000192  2006                     363          move.l d6,d0
00000194  D086                     364          add.l d6,d0
00000196  D086                     365          add.l d6,d0
00000198                           366          
00000198                           367          ;offset bytes for padding ( number of pixels in row mod 4)
00000198  2606                     368          move.l d6,d3
0000019A  0283 00000003            369          andi.l #3,d3
000001A0  D083                     370          add.l  d3,d0
000001A2                           371          
000001A2  C2C0                     372          mulu   d0,d1   ; d1 => vertical offset * number of bytes per row
000001A4                           373          
000001A4  2039 0049A360            374          move.l (IMAGE_START_X),d0       
000001AA  D0B9 0049A360            375          add.l  (IMAGE_START_X),d0
000001B0  D0B9 0049A360            376          add.l  (IMAGE_START_X),d0 ; 3 * number of pixels for x-offset
000001B6                           377          
000001B6  D280                     378          add.l  d0,d1 ; d1 => add x-Offset 
000001B8                           379                
000001B8  D285                     380          add.l  d5,d1   ; add the bytes to skip
000001BA                           381          
000001BA  2008                     382          move.l a0,d0
000001BC  D081                     383          add.l  d1,d0
000001BE  2040                     384          move.l d0,a0   ; points to start of Image data
000001C0                           385          
000001C0                           386          ; calculate the offset bytes that needs to be skipped after every row is incremented
000001C0  2A06                     387          move.l d6,d5
000001C2  2239 0049A360            388          move.l (IMAGE_START_X),d1
000001C8  2439 0049A368            389          move.l (IMAGE_END_X),d2
000001CE                           390  
000001CE  9A82                     391          sub.l   d2,d5 
000001D0  DA81                     392          add.l   d1,d5 ; (Image Width - Image OffsetEnd) + Image OffsetStart
000001D2                           393          
000001D2  2005                     394          move.l d5,d0
000001D4  DA80                     395          add.l  d0,d5
000001D6  DA80                     396          add.l  d0,d5 ; 3 * number of pixels
000001D8                           397        
000001D8                           398          
000001D8  DA83                     399          add.l  d3,d5 ; add the padding bytes
000001DA                           400         
000001DA                           401          ;d3 -> x counter 
000001DA                           402          ;d4 -> y counter
000001DA  4283                     403          clr.l d3
000001DC  4284                     404          clr.l d4
000001DE                           405          
000001DE                           406          ; translate the points on screen
000001DE                           407          
000001DE  2639 0049A360            408          move.l  (IMAGE_START_X),d3
000001E4  D6B9 0049A358            409          add.l   (SCREEN_OFFSET_X),d3
000001EA                           410          
000001EA  2839 0049A36C            411          move.l  (IMAGE_END_Y),d4
000001F0  D8B9 0049A35C            412          add.l   (SCREEN_OFFSET_Y),d4   
000001F6                           413          
000001F6  5384                     414          subi.l  #1,d4
000001F8                           415          
000001F8  2C39 0049A368            416          move.l  (IMAGE_END_X),d6
000001FE  DCB9 0049A358            417          add.l   (SCREEN_OFFSET_X),d6
00000204                           418          
00000204  2E39 0049A364            419          move.l  (IMAGE_START_Y),d7
0000020A  DEB9 0049A35C            420          add.l   (SCREEN_OFFSET_Y),d7
00000210                           421                  
00000210                           422  drawImage:
00000210                           423          ; Set Pencolor from the bitmap image    
00000210  4281                     424          clr.l d1
00000212                           425      
00000212  1218                     426          move.b (a0)+,d1
00000214  E189                     427          lsl.l  #8,d1
00000216  1218                     428          move.b (a0)+,d1 
00000218  E189                     429          lsl.l  #8,d1
0000021A  1218                     430          move.b (a0)+,d1   
0000021C                           431          
0000021C  7050                     432          move.l #PEN_COLOR_TRAP_CODE, d0
0000021E  4E4F                     433          trap   #15
00000220                           434          
00000220  2203                     435          move.l  d3,d1
00000222  2404                     436          move.l  d4,d2
00000224  7052                     437          move.l  #DRAW_PIXEL_TRAP_CODE, d0
00000226  4E4F                     438          trap    #15
00000228                           439  
00000228  5283                     440          addi.l  #1,d3
0000022A  B686                     441          cmp.l   d6,d3
0000022C  66E2                     442          bne     drawImage
0000022E                           443          
0000022E  2008                     444          move.l  a0,d0
00000230  D085                     445          add.l   d5,d0
00000232  2040                     446          move.l  d0,a0 ; add the offset bytes after drawing every row
00000234                           447          
00000234  2639 0049A360            448          move.l  (IMAGE_START_X),d3      
0000023A  D6B9 0049A358            449          add.l   (SCREEN_OFFSET_X),d3    ; initialize the x value in the new row
00000240  5384                     450          subi.l  #1,d4
00000242  B887                     451          cmp.l   d7,d4
00000244  6CCA                     452          bge     drawImage     
00000246  6000 FF3E                453          bra     continueCode
0000024A                           454         
0000024A                           455  
0000024A                           456  
0000024A                           457  
0000024A                           458  
0000024A                           459  
0000024A                           460  
0000024A                           461  
0000024A                           462  
0000024A                           463  
0000024A                           464  
0000024A                           465  
0000024A                           466  
0000024A                           467  
0000024A                           468  
0000024A                           469  
0000024A                           470  
0000024A                           471  
0000024A                           472  -------------------- end include --------------------
0000024A                           473      INCLUDE     "InputHandler.x68"
0000024A                           474  
0000024A                           475  
0000024A  =00000013                476  GET_USER_INPUT_COMMAND   EQU     19
0000024A                           477  
0000024A  =00000025                478  KEY_LEFT_INPUT           EQU     $25
0000024A                           479  
0000024A  =00000027                480  KEY_RIGHT_INPUT          EQU     $27
0000024A                           481  
0000024A  =00000020                482  KEY_SPACE_INPUT          EQU     $20
0000024A                           483  
0000024A  =00000026                484  KEY_UP_INPUT             EQU    $26
0000024A                           485      
0000024A                           486          
0000024A                           487  handleInput
0000024A                           488  
0000024A  48E7 FFFE                489          movem.l ALL_REG,-(sp)
0000024E                           490        
0000024E  223C 26202725            491          move.l  #$26202725,d1
00000254  103C 0013                492          move.b  #GET_USER_INPUT_COMMAND,d0
00000258  4E4F                     493          TRAP    #15
0000025A                           494          
0000025A  0201 00FF                495          andi.b  #$FF,d1
0000025E  6600 007A                496          bne     handleLeftInput
00000262  23FC 00000000 0049A398   497          move.l  #0,LEFT_KEY_COUNTER
0000026C  13FC 0001 0049A394       498          move.b  #1,LEFT_NOT_PRESSED
00000274                           499  
00000274                           500  continueLeftInput:    
00000274                           501      
00000274  E081                     502          asr.l   #8,d1
00000276  0201 00FF                503          andi.b  #$FF,d1
0000027A  6600 0080                504          bne     handleRightInput
0000027E  23FC 00000000 0049A39C   505          move.l  #0,RIGHT_KEY_COUNTER
00000288  13FC 0001 0049A395       506          move.b  #1,RIGHT_NOT_PRESSED
00000290                           507  
00000290                           508  continueRightInput:
00000290                           509          
00000290  E081                     510          asr.l   #8,d1
00000292  0201 00FF                511          andi.b  #$FF,d1
00000296  6600 0086                512          bne     handleSpaceInput
0000029A                           513         ; move.l  #0,LEFT_KEY_COUNTER
0000029A  13FC 0001 0049A396       514          move.b  #1,SPACE_NOT_PRESSED
000002A2                           515          
000002A2                           516  continueSpaceInput:
000002A2  E081                     517          asr.l   #8,d1
000002A4  0201 00FF                518          andi.b  #$FF,d1
000002A8  6600 00AC                519          bne     handleUpInput
000002AC  13FC 0001 0049A397       520          move.b  #1,UP_NOT_PRESSED
000002B4                           521          
000002B4                           522  
000002B4                           523  aroundNoInput:
000002B4                           524  
000002B4  4CDF 7FFF                525          movem.l (sp)+,ALL_REG
000002B8  4E75                     526          rts
000002BA                           527  
000002BA                           528  incrementLeftCounter:
000002BA  2439 0049A398            529          move.l  LEFT_KEY_COUNTER,d2
000002C0  5A82                     530          addi.l  #PLAYER_SPEED,d2
000002C2  23C2 0049A398            531          move.l  d2,LEFT_KEY_COUNTER
000002C8                           532          
000002C8  60AA                     533          bra     continueLeftInput
000002CA                           534       
000002CA                           535          
000002CA                           536  incrementRightCounter:
000002CA  2439 0049A39C            537          move.l  RIGHT_KEY_COUNTER,d2
000002D0  5A82                     538          addi.l  #PLAYER_SPEED,d2
000002D2  23C2 0049A39C            539          move.l  d2,RIGHT_KEY_COUNTER
000002D8                           540          
000002D8  60B6                     541          bra continueRightInput
000002DA                           542          
000002DA                           543          
000002DA                           544  handleLeftInput:
000002DA  1039 0049A394            545      move.b  LEFT_NOT_PRESSED,d0
000002E0  67D8                     546      beq     incrementLeftCounter
000002E2                           547      
000002E2  13FC 0000 0049A394       548      move.b  #0,LEFT_NOT_PRESSED
000002EA  2439 0049A398            549      move.l  LEFT_KEY_COUNTER,d2
000002F0  5A82                     550      addi.l  #PLAYER_SPEED,d2
000002F2  23C2 0049A398            551      move.l  d2,LEFT_KEY_COUNTER
000002F8                           552      
000002F8  6000 FF7A                553      bra continueLeftInput             
000002FC                           554  
000002FC                           555  handleRightInput:
000002FC  1039 0049A395            556      move.b  RIGHT_NOT_PRESSED,d0
00000302  67C6                     557      beq     incrementRightCounter
00000304                           558      
00000304  13FC 0000 0049A395       559      move.b  #0,RIGHT_NOT_PRESSED
0000030C  2439 0049A39C            560      move.l  RIGHT_KEY_COUNTER,d2
00000312  5A82                     561      addi.l  #PLAYER_SPEED,d2
00000314  23C2 0049A39C            562      move.l  d2,RIGHT_KEY_COUNTER
0000031A                           563      
0000031A  6000 FF74                564      bra continueRightInput
0000031E                           565      
0000031E                           566  
0000031E                           567  handleSpaceInput:
0000031E  1039 0049A396            568      move.b  SPACE_NOT_PRESSED,d0
00000324  6700 FF7C                569      beq     continueSpaceInput
00000328                           570         
00000328  2A39 0049A45A            571      move.l  IN_AIR,d5
0000032E  0C85 00000001            572      cmpi.l  #1,d5
00000334  6700 FF6C                573      beq     continueSpaceInput
00000338                           574         
00000338  13FC 0000 0049A396       575      move.b  #0,SPACE_NOT_PRESSED 
00000340  7810                     576      move.l  #JUMP_MAGNITUDE,d4
00000342  23C4 0049A3AE            577      move.l  d4,PREVIOUS_SPEED
00000348  23FC 00000001 0049A45A   578      move.l  #1,IN_AIR
00000352  6000 FF4E                579      bra continueSpaceInput
00000356                           580      
00000356                           581  
00000356                           582  handleUpInput:
00000356  1039 0049A397            583      move.b  UP_NOT_PRESSED,d0
0000035C  6700 FF56                584      beq     aroundNoInput
00000360                           585      
00000360  13FC 0000 0049A397       586      move.b  #0,UP_NOT_PRESSED
00000368                           587  
00000368                           588      
00000368  4CDF 7FFF                589      movem.l (sp)+,ALL_REG
0000036C  4E75                     590      rts
0000036E                           591  
0000036E                           592  
0000036E                           593  
0000036E                           594  
0000036E                           595  
0000036E                           596  
0000036E                           597  
0000036E                           598  
0000036E                           599  
0000036E                           600  
0000036E                           601  
0000036E                           602  
0000036E                           603  
0000036E                           604  
0000036E                           605  
0000036E                           606  
0000036E                           607  
0000036E                           608  
0000036E                           609  
0000036E                           610  
0000036E                           611  
0000036E                           612  
0000036E                           613  
0000036E                           614  -------------------- end include --------------------
0000036E                           615      INCLUDE     "MovePlayer.x68"
0000036E                           616   *-----------------------------------------------------------
0000036E                           617  
0000036E                           618  moveLeft:
0000036E                           619  
0000036E  23FC 00000000 0049A398   620      move.l  #0,LEFT_KEY_COUNTER
00000378  5381                     621      subi.l  #1,d1
0000037A  6D00 006A                622      blt     continueLeft
0000037E  4EB9 000004D4            623      jsr  invalidatePlayer
00000384  23C1 0049A370            624      move.l  d1,PLAYER_POSITION_X
0000038A  6000 005A                625      bra     continueLeft
0000038E                           626      
0000038E                           627      
0000038E                           628  moveRight:
0000038E  23FC 00000000 0049A39C   629      move.l  #0,RIGHT_KEY_COUNTER
00000398  5281                     630      addi.l  #1,d1
0000039A  2601                     631      move.l  d1,d3
0000039C  0683 0000001E            632      addi.l  #PLAYER_WIDTH,d3
000003A2  0C83 00000400            633      cmpi.l  #SCREEN_WIDTH,d3    
000003A8  6E00 0052                634      bgt     continueRight
000003AC  4EB9 000004D4            635      jsr invalidatePlayer
000003B2  23C1 0049A370            636      move.l  d1,PLAYER_POSITION_X
000003B8  6000 0042                637      bra     continueRight
000003BC                           638  
000003BC                           639  resetYDelta:
000003BC  23FC 00000000 0049A3A2   640      move.l  #0,YDELTA
000003C6  4CDF 7FFF                641      movem.l (sp)+,ALL_REG
000003CA  4E75                     642      rts  
000003CC                           643  
000003CC                           644  updatePlayerPosition   
000003CC  48E7 FFFE                645      movem.l ALL_REG,-(sp)
000003D0                           646      
000003D0  2239 0049A370            647      move.l  PLAYER_POSITION_X,d1
000003D6  2439 0049A398            648      move.l  LEFT_KEY_COUNTER,d2
000003DC  E482                     649      asr.l   #2,d2 
000003DE                           650  ;
000003DE  0C82 00000001            651      cmpi.l  #1,d2
000003E4  6788                     652      beq     moveLeft
000003E6                           653     
000003E6                           654  continueLeft:
000003E6                           655  
000003E6  2239 0049A370            656      move.l  PLAYER_POSITION_X,d1
000003EC  2439 0049A39C            657      move.l  RIGHT_KEY_COUNTER,d2
000003F2  E482                     658      asr.l   #2,d2
000003F4                           659      
000003F4  0C82 00000001            660      cmpi.l  #1,d2
000003FA  6792                     661      beq     moveRight
000003FC                           662  
000003FC                           663  continueRight:        
000003FC                           664     
000003FC                           665  gravityStart:
000003FC                           666      
000003FC  4281                     667      clr.l   d1
000003FE  4282                     668      clr.l   d2
00000400  4283                     669      clr.l   d3
00000402                           670      
00000402                           671      ; Update the velocity and displacement only in specific 
00000402                           672      ; intervals
00000402                           673      
00000402  2239 0049A3A6            674      move.l  YDELTA_COUNTER,d1
00000408  2401                     675      move.l  d1,d2
0000040A  E882                     676      asr.l   #4,d2
0000040C                           677      
0000040C  0C82 00000001            678      cmpi.l  #1,d2
00000412  6700 0010                679      beq     updateYDelta
00000416  5281                     680      addi.l  #1,d1
00000418  23C1 0049A3A6            681      move.l  d1,YDELTA_COUNTER
0000041E                           682      
0000041E  4CDF 7FFF                683      movem.l (sp)+,ALL_REG
00000422  4E75                     684      rts
00000424                           685  
00000424                           686      
00000424                           687  updateYDelta:  
00000424  23FC 00000000 0049A3A2   688     move.l   #0,YDELTA
0000042E  23FC 00000000 0049A3A6   689     move.l   #0,YDELTA_COUNTER
00000438                           690     ; move.l  CURRENT_SPEED,d1
00000438  2439 0049A3AE            691      move.l  PREVIOUS_SPEED,d2    
0000043E  7601                     692      move.l  #GRAVITY,d3
00000440                           693      
00000440                           694      ; Update the currentspeed
00000440  2202                     695      move.l  d2,d1
00000442  9283                     696      sub.l   d3,d1
00000444  23C1 0049A3AA            697      move.l  d1,CURRENT_SPEED
0000044A                           698      
0000044A                           699      ; Update the displacement
0000044A  D481                     700      add.l   d1,d2
0000044C  E282                     701      asr.l   #1,d2
0000044E  23C2 0049A3A2            702      move.l  d2,YDELTA
00000454                           703      
00000454                           704      ;Update the previous speed
00000454  23C1 0049A3AE            705      move.l  d1,PREVIOUS_SPEED
0000045A                           706      
0000045A  2239 0049A374            707      move.l  PLAYER_POSITION_Y,d1
00000460                           708    ;  asr.l   #8,d2
00000460  9282                     709      sub.l   d2,d1
00000462                           710      
00000462  0C81 0000026C            711      cmpi.l  #GROUND,d1
00000468  6E00 000E                712      bgt     continueYDelta
0000046C  4EB9 000004D4            713      jsr     invalidatePlayer
00000472  23C1 0049A374            714      move.l  d1,PLAYER_POSITION_Y
00000478                           715  
00000478                           716  continueYDelta:
00000478                           717      ;cmpi.l  #1,d2
00000478                           718     ; bge     resetYDelta 
00000478  23FC 00000000 0049A45A   719     move.l   #0,IN_AIR
00000482  4CDF 7FFF                720      movem.l (sp)+,ALL_REG
00000486  4E75                     721      rts
00000488                           722      
00000488                           723  
00000488                           724  
00000488                           725  
00000488                           726  
00000488                           727  
00000488                           728  
00000488                           729  
00000488                           730  
00000488                           731  
00000488                           732  
00000488                           733  
00000488                           734  
00000488                           735  
00000488                           736  
00000488                           737  
00000488                           738  
00000488                           739  
00000488                           740  
00000488                           741  
00000488                           742  
00000488                           743  
00000488                           744  
00000488                           745  
00000488                           746  
00000488                           747  
00000488                           748  
00000488                           749  
00000488                           750  
00000488                           751  
00000488                           752  
00000488                           753  
00000488                           754  
00000488                           755  
00000488                           756  
00000488                           757  
00000488                           758  
00000488                           759  
00000488                           760  
00000488                           761  
00000488                           762  
00000488                           763  
00000488                           764  
00000488                           765  
00000488                           766  
00000488                           767  
00000488                           768  
00000488                           769  
00000488                           770  
00000488                           771  
00000488                           772  
00000488                           773  
00000488                           774  
00000488                           775  
00000488                           776  
00000488                           777  
00000488                           778  
00000488                           779  
00000488                           780  
00000488                           781  -------------------- end include --------------------
00000488                           782      INCLUDE     "RenderPlayer.x68"
00000488                           783   *-----------------------------------------------------------
00000488                           784  
00000488                           785  ; Render Player Stationary
00000488                           786  
00000488                           787  renderPlayer   
00000488  48E7 FFFE                788      movem.l ALL_REG,-(sp)
0000048C                           789      
0000048C                           790    
0000048C                           791      
0000048C  7050                     792      move.l  #SET_PEN_COLOR_TRAP,d0
0000048E  223C 000000FF            793      move.l  #$000000FF,d1
00000494  4E4F                     794      trap    #15
00000496                           795      
00000496  7051                     796      move.l  #SET_FILL_COLOR_TRAP,d0
00000498  2239 0049A456            797      move.l  PLAYER_FILL_COLOR,d1
0000049E  4E4F                     798      trap    #15
000004A0                           799      
000004A0  2239 0049A370            800      move.l  (PLAYER_POSITION_X),d1
000004A6  2439 0049A374            801      move.l  (PLAYER_POSITION_Y),d2
000004AC  2639 0049A370            802      move.l  (PLAYER_POSITION_X),d3
000004B2  0683 0000001E            803      addi.l  #PLAYER_WIDTH,d3
000004B8  2839 0049A374            804      move.l  (PLAYER_POSITION_Y),d4
000004BE  0684 0000000A            805      addi.l  #PLAYER_HEIGHT,d4
000004C4                           806  
000004C4  7057                     807      move.l  #DRAW_FILLED_RECTANGLE_TRAP,d0
000004C6  4E4F                     808      trap    #15
000004C8                           809      
000004C8  103C 005E                810      move.b #DUMP_SCREEN_BUFFER,d0
000004CC  4E4F                     811      trap   #15
000004CE                           812      
000004CE  4CDF 7FFF                813      movem.l (sp)+,ALL_REG
000004D2  4E75                     814      rts
000004D4                           815  invalidatePlayer:
000004D4  48E7 FFFE                816      movem.l ALL_REG, -(sp)
000004D8                           817      
000004D8                           818      
000004D8  41F9 0024DB38            819      lea BackGroundImage2,a0
000004DE                           820      
000004DE  23FC 00000000 0049A358   821      move.l  #0,(SCREEN_OFFSET_X)
000004E8  23FC 00000000 0049A35C   822      move.l  #0,(SCREEN_OFFSET_Y)
000004F2                           823      
000004F2  2239 0049A370            824      move.l  PLAYER_POSITION_X,d1
000004F8  2439 0049A374            825      move.l  PLAYER_POSITION_Y,d2
000004FE                           826          
000004FE  23C1 0049A360            827      move.l  d1,(IMAGE_START_X)
00000504  23C2 0049A364            828      move.l  d2,(IMAGE_START_Y)
0000050A                           829          
0000050A  0681 00000020            830      addi.l  #PLAYER_WIDTH+2,d1
00000510  0682 0000000C            831      addi.l  #PLAYER_HEIGHT+2,d2
00000516                           832      
00000516  23C1 0049A368            833      move.l  d1,(IMAGE_END_X)
0000051C  23C2 0049A36C            834      move.l  d2,(IMAGE_END_Y)
00000522                           835      
00000522  4EB8 0124                836      jsr     renderImage
00000526                           837      
00000526  103C 005E                838      move.b #DUMP_SCREEN_BUFFER,d0
0000052A  4E4F                     839      trap   #15
0000052C                           840     
0000052C  4CDF 7FFF                841      movem.l (sp)+,ALL_REG
00000530  4E75                     842      rts
00000532                           843  
00000532                           844      
00000532                           845  ; Render Player Jump
00000532                           846  
00000532                           847  ; Render Player Left
00000532                           848  
00000532                           849  ; Render Player Right
00000532                           850  
00000532                           851  
00000532                           852  
00000532                           853  
00000532                           854  
00000532                           855  
00000532                           856  
00000532                           857  
00000532                           858  
00000532                           859  
00000532                           860  
00000532                           861  
00000532                           862  
00000532                           863  
00000532                           864  
00000532                           865  
00000532                           866  
00000532                           867  
00000532                           868  
00000532                           869  
00000532                           870  
00000532                           871  
00000532                           872  
00000532                           873  
00000532                           874  
00000532                           875  
00000532                           876  
00000532                           877  
00000532                           878  
00000532                           879  -------------------- end include --------------------
00000532                           880      INCLUDE     "MoveObstacle.x68"
00000532                           881   *-----------------------------------------------------------
00000532                           882  initializeObstacle1:
00000532  23FC 000001E0 0049A3D2   883          move.l #OBSTACLE_START_TOP_X,OBSTACLE1_TOP_X   
0000053C  23FC 000001F4 0049A3D6   884          move.l #OBSTACLE_START_TOP_Y,OBSTACLE1_TOP_Y      
00000546  23FC 00000208 0049A3DA   885          move.l #OBSTACLE_START_BOTTOM_X,OBSTACLE1_BOTTOM_X  
00000550  23FC 00000208 0049A3DE   886          move.l #OBSTACLE_START_BOTTOM_Y,OBSTACLE1_BOTTOM_Y 
0000055A                           887          
0000055A                           888          ;jsr renderObstacle1
0000055A                           889     
0000055A  4CDF 7FFF                890           movem.l (sp)+,ALL_REG
0000055E  4E75                     891           rts
00000560                           892   
00000560                           893   ;Draw Obstacle for the index
00000560                           894   
00000560                           895  updateObstacle1:
00000560  48E7 FFFE                896      movem.l     ALL_REG,-(sp)
00000564                           897      
00000564                           898      ; check if we need to draw this obstacle
00000564                           899      
00000564  2239 0049A3D2            900      move.l  OBSTACLE1_TOP_X,d1
0000056A  0C81 000001E0            901      cmpi.l  #OBSTACLE_START_TOP_X,d1
00000570  6600 0008                902      bne     continueUpdate1
00000574                           903      
00000574  4CDF 7FFF                904      movem.l (sp)+,ALL_REG
00000578  4E75                     905      rts
0000057A                           906      
0000057A                           907  continueUpdate1:
0000057A  2239 0049A3B2            908      move.l  OBSTACLE1_COUNTER,d1
00000580  2401                     909      move.l  d1,d2
00000582  E882                     910      asr.l   #OBSTACLE_SPEED_FRACTION,d2
00000584                           911      
00000584  0C82 00000001            912      cmpi.l  #1,d2
0000058A  6700 0010                913      beq     moveObstacle1
0000058E  5281                     914      addi.l  #1,d1
00000590  23C1 0049A3B2            915      move.l  d1,OBSTACLE1_COUNTER
00000596                           916      
00000596  4CDF 7FFF                917      movem.l (sp)+,ALL_REG
0000059A  4E75                     918      rts
0000059C                           919      
0000059C                           920  moveObstacle1:
0000059C                           921   
0000059C  23FC 00000000 0049A3B2   922     move.l   #0,OBSTACLE1_COUNTER
000005A6                           923     
000005A6  2239 0049A3D2            924     move.l   OBSTACLE1_TOP_X,d1
000005AC  2439 0049A3D6            925     move.l   OBSTACLE1_TOP_Y,d2
000005B2  2639 0049A3DA            926     move.l   OBSTACLE1_BOTTOM_X,d3
000005B8  2839 0049A3DE            927     move.l   OBSTACLE1_BOTTOM_Y,d4
000005BE                           928     
000005BE                           929     ;Introduce Randomness here
000005BE                           930     
000005BE  5581                     931     subi.l   #2,d1
000005C0  5482                     932     addi.l   #2,d2
000005C2  5483                     933     addi.l   #2,d3
000005C4  5484                     934     addi.l   #2,d4
000005C6                           935     
000005C6                           936     ; update the positions in the memory 
000005C6  23C1 0049A3D2            937     move.l   d1,OBSTACLE1_TOP_X
000005CC  23C2 0049A3D6            938     move.l   d2,OBSTACLE1_TOP_Y
000005D2  23C3 0049A3DA            939     move.l   d3,OBSTACLE1_BOTTOM_X
000005D8  23C4 0049A3DE            940     move.l   d4,OBSTACLE1_BOTTOM_Y
000005DE                           941     
000005DE  0C84 000002A8            942     cmpi.l   #GROUND+60,d4
000005E4  6E00 FF4C                943     bgt      initializeObstacle1
000005E8                           944     
000005E8  4EB9 00000846            945     jsr renderObstacle1
000005EE                           946    
000005EE  4CDF 7FFF                947     movem.l (sp)+,ALL_REG
000005F2  4E75                     948     rts
000005F4                           949  
000005F4                           950   initializeObstacle2:
000005F4  23FC 000001E0 0049A3E2   951          move.l #OBSTACLE_START_TOP_X,OBSTACLE2_TOP_X   
000005FE  23FC 000001F4 0049A3E6   952          move.l #OBSTACLE_START_TOP_Y,OBSTACLE2_TOP_Y      
00000608  23FC 00000208 0049A3EA   953          move.l #OBSTACLE_START_BOTTOM_X,OBSTACLE2_BOTTOM_X  
00000612  23FC 00000208 0049A3EE   954          move.l #OBSTACLE_START_BOTTOM_Y,OBSTACLE2_BOTTOM_Y 
0000061C                           955          
0000061C                           956          ;jsr renderObstacle2
0000061C                           957     
0000061C  4CDF 7FFF                958           movem.l (sp)+,ALL_REG
00000620  4E75                     959           rts
00000622                           960   
00000622                           961   ;Draw Obstacle for the index
00000622                           962   
00000622                           963  updateObstacle2:
00000622  48E7 FFFE                964      movem.l     ALL_REG,-(sp)
00000626                           965      
00000626                           966      ; check if we need to draw this obstacle
00000626                           967      
00000626  2239 0049A3E2            968      move.l  OBSTACLE2_TOP_X,d1
0000062C  0C81 000001E0            969      cmpi.l  #OBSTACLE_START_TOP_X,d1
00000632  6600 0008                970      bne     continueUpdate2
00000636                           971      
00000636  4CDF 7FFF                972      movem.l (sp)+,ALL_REG
0000063A  4E75                     973      rts
0000063C                           974      
0000063C                           975  continueUpdate2:
0000063C  2239 0049A3B6            976      move.l  OBSTACLE2_COUNTER,d1
00000642  2401                     977      move.l  d1,d2
00000644  E882                     978      asr.l   #OBSTACLE_SPEED_FRACTION,d2
00000646                           979      
00000646  0C82 00000001            980      cmpi.l  #1,d2
0000064C  6700 0010                981      beq     moveObstacle2
00000650  5281                     982      addi.l  #1,d1
00000652  23C1 0049A3B6            983      move.l  d1,OBSTACLE2_COUNTER
00000658                           984      
00000658  4CDF 7FFF                985      movem.l (sp)+,ALL_REG
0000065C  4E75                     986      rts
0000065E                           987      
0000065E                           988  moveObstacle2:
0000065E                           989   
0000065E  23FC 00000000 0049A3B6   990     move.l   #0,OBSTACLE2_COUNTER
00000668                           991     
00000668  2239 0049A3E2            992     move.l   OBSTACLE2_TOP_X,d1
0000066E  2439 0049A3E6            993     move.l   OBSTACLE2_TOP_Y,d2
00000674  2639 0049A3EA            994     move.l   OBSTACLE2_BOTTOM_X,d3
0000067A  2839 0049A3EE            995     move.l   OBSTACLE2_BOTTOM_Y,d4
00000680                           996     
00000680                           997     ;Introduce Randomness here
00000680                           998     
00000680  5581                     999     subi.l   #2,d1
00000682  5482                    1000     addi.l   #2,d2
00000684  5483                    1001     addi.l   #2,d3
00000686  5484                    1002     addi.l   #2,d4
00000688                          1003     
00000688                          1004     ; update the positions in the memory 
00000688  23C1 0049A3E2           1005     move.l   d1,OBSTACLE2_TOP_X
0000068E  23C2 0049A3E6           1006     move.l   d2,OBSTACLE2_TOP_Y
00000694  23C3 0049A3EA           1007     move.l   d3,OBSTACLE2_BOTTOM_X
0000069A  23C4 0049A3EE           1008     move.l   d4,OBSTACLE2_BOTTOM_Y
000006A0                          1009     
000006A0  0C84 000002A8           1010     cmpi.l   #GROUND+60,d4
000006A6  6E00 FF4C               1011     bgt      initializeObstacle2
000006AA                          1012     
000006AA  4EB9 00000886           1013     jsr renderObstacle2
000006B0                          1014    
000006B0  4CDF 7FFF               1015     movem.l (sp)+,ALL_REG
000006B4  4E75                    1016     rts
000006B6                          1017      
000006B6                          1018      
000006B6                          1019      
000006B6                          1020      
000006B6                          1021      
000006B6                          1022       
000006B6                          1023  
000006B6                          1024  
000006B6                          1025  
000006B6                          1026  
000006B6                          1027  
000006B6                          1028  
000006B6                          1029  
000006B6                          1030  
000006B6                          1031  
000006B6                          1032  
000006B6                          1033  
000006B6                          1034  
000006B6                          1035  
000006B6                          1036  
000006B6                          1037  
000006B6                          1038  
000006B6                          1039  
000006B6                          1040  
000006B6                          1041  
000006B6                          1042  
000006B6                          1043  
000006B6                          1044  
000006B6                          1045  
000006B6                          1046  
000006B6                          1047  
000006B6                          1048  
000006B6                          1049  
000006B6                          1050  
000006B6                          1051  
000006B6                          1052  
000006B6                          1053  
000006B6                          1054  
000006B6                          1055  
000006B6                          1056  
000006B6                          1057  
000006B6                          1058  
000006B6                          1059  
000006B6                          1060  
000006B6                          1061  
000006B6                          1062  
000006B6                          1063  
000006B6                          1064  
000006B6                          1065  
000006B6                          1066  
000006B6                          1067  
000006B6                          1068  
000006B6                          1069  
000006B6                          1070  
000006B6                          1071  
000006B6                          1072  
000006B6                          1073  
000006B6                          1074  
000006B6                          1075  
000006B6                          1076  
000006B6                          1077  
000006B6                          1078  
000006B6                          1079  
000006B6                          1080  
000006B6                          1081  
000006B6                          1082  
000006B6                          1083  
000006B6                          1084  
000006B6                          1085  
000006B6                          1086  
000006B6                          1087  
000006B6                          1088  
000006B6                          1089  
000006B6                          1090  
000006B6                          1091  
000006B6                          1092  
000006B6                          1093  
000006B6                          1094  
000006B6                          1095  
000006B6                          1096  
000006B6                          1097  
000006B6                          1098  
000006B6                          1099  
000006B6                          1100  
000006B6                          1101  
000006B6                          1102  
000006B6                          1103      
000006B6                          1104      
000006B6                          1105      
000006B6                          1106      
000006B6                          1107      
000006B6                          1108       
000006B6                          1109  
000006B6                          1110  
000006B6                          1111  
000006B6                          1112  
000006B6                          1113  
000006B6                          1114  
000006B6                          1115  
000006B6                          1116  
000006B6                          1117  
000006B6                          1118  
000006B6                          1119  
000006B6                          1120  
000006B6                          1121  
000006B6                          1122  
000006B6                          1123  
000006B6                          1124  
000006B6                          1125  
000006B6                          1126  
000006B6                          1127  
000006B6                          1128  
000006B6                          1129  
000006B6                          1130  
000006B6                          1131  
000006B6                          1132  
000006B6                          1133  
000006B6                          1134  
000006B6                          1135  
000006B6                          1136  
000006B6                          1137  
000006B6                          1138  
000006B6                          1139  
000006B6                          1140  
000006B6                          1141  
000006B6                          1142  
000006B6                          1143  
000006B6                          1144  
000006B6                          1145  
000006B6                          1146  
000006B6                          1147  
000006B6                          1148  
000006B6                          1149  
000006B6                          1150  
000006B6                          1151  
000006B6                          1152  
000006B6                          1153  
000006B6                          1154  
000006B6                          1155  
000006B6                          1156  
000006B6                          1157  
000006B6                          1158  
000006B6                          1159  
000006B6                          1160  
000006B6                          1161  
000006B6                          1162  
000006B6                          1163  
000006B6                          1164  
000006B6                          1165  
000006B6                          1166  
000006B6                          1167  
000006B6                          1168  
000006B6                          1169  
000006B6                          1170  
000006B6                          1171  
000006B6                          1172  
000006B6                          1173  
000006B6                          1174  
000006B6                          1175  
000006B6                          1176  
000006B6                          1177  
000006B6                          1178  
000006B6                          1179  
000006B6                          1180  
000006B6                          1181  
000006B6                          1182  
000006B6                          1183  
000006B6                          1184  
000006B6                          1185  
000006B6                          1186  
000006B6                          1187  
000006B6                          1188  
000006B6                          1189  
000006B6                          1190  
000006B6                          1191  -------------------- end include --------------------
000006B6                          1192      INCLUDE     "InvalidateObstacle.x68"
000006B6                          1193   *-----------------------------------------------------------
000006B6                          1194  initializeInval1:
000006B6  23FC 000001E0 0049A3F2  1195          move.l #OBSTACLE_START_TOP_X,INVAL1_TOP_X   
000006C0  23FC 000001F4 0049A3F6  1196          move.l #OBSTACLE_START_TOP_Y,INVAL1_TOP_Y      
000006CA  23FC 00000208 0049A3FA  1197          move.l #OBSTACLE_START_BOTTOM_X,INVAL1_BOTTOM_X  
000006D4  23FC 000001F6 0049A3FE  1198          move.l #OBSTACLE_START_TOP_Y+2,INVAL1_BOTTOM_Y 
000006DE                          1199          
000006DE                          1200          ;jsr renderInval1
000006DE  4EB9 000008C6           1201          jsr invalidateObstacle1
000006E4                          1202     
000006E4  4CDF 7FFF               1203           movem.l (sp)+,ALL_REG
000006E8  4E75                    1204           rts
000006EA                          1205   
000006EA                          1206   ;Draw Obstacle for the index
000006EA                          1207   
000006EA                          1208  updateInval1:
000006EA  48E7 FFFE               1209      movem.l     ALL_REG,-(sp)
000006EE                          1210      
000006EE                          1211      ; check if we need to draw this obstacle
000006EE                          1212      
000006EE  2239 0049A3F2           1213      move.l  INVAL1_TOP_X,d1
000006F4  0C81 000001E0           1214      cmpi.l  #OBSTACLE_START_TOP_X,d1
000006FA  6600 0008               1215      bne     continueInvalUpdate1
000006FE                          1216      
000006FE  4CDF 7FFF               1217      movem.l (sp)+,ALL_REG
00000702  4E75                    1218      rts
00000704                          1219      
00000704                          1220  continueInvalUpdate1:
00000704  2239 0049A3BA           1221      move.l  INVAL1_COUNTER,d1
0000070A  2401                    1222      move.l  d1,d2
0000070C  E882                    1223      asr.l   #OBSTACLE_SPEED_FRACTION,d2
0000070E                          1224      
0000070E  0C82 00000001           1225      cmpi.l  #1,d2
00000714  6700 0010               1226      beq     moveInval1
00000718  5281                    1227      addi.l  #1,d1
0000071A  23C1 0049A3BA           1228      move.l  d1,INVAL1_COUNTER
00000720                          1229      
00000720  4CDF 7FFF               1230      movem.l (sp)+,ALL_REG
00000724  4E75                    1231      rts
00000726                          1232      
00000726                          1233  moveInval1:
00000726                          1234   
00000726  23FC 00000000 0049A3BA  1235     move.l   #0,INVAL1_COUNTER
00000730                          1236     
00000730  2239 0049A3F2           1237     move.l   INVAL1_TOP_X,d1
00000736  2439 0049A3F6           1238     move.l   INVAL1_TOP_Y,d2
0000073C  2639 0049A3FA           1239     move.l   INVAL1_BOTTOM_X,d3
00000742  2839 0049A3FE           1240     move.l   INVAL1_BOTTOM_Y,d4
00000748                          1241     
00000748                          1242     ;Introduce Randomness here
00000748                          1243     
00000748  5581                    1244     subi.l   #2,d1
0000074A  5482                    1245     addi.l   #2,d2
0000074C  5483                    1246     addi.l   #2,d3
0000074E  5484                    1247     addi.l   #2,d4
00000750                          1248     
00000750                          1249     ; update the positions in the memory 
00000750  23C1 0049A3F2           1250     move.l   d1,INVAL1_TOP_X
00000756  23C2 0049A3F6           1251     move.l   d2,INVAL1_TOP_Y
0000075C  23C3 0049A3FA           1252     move.l   d3,INVAL1_BOTTOM_X
00000762  23C4 0049A3FE           1253     move.l   d4,INVAL1_BOTTOM_Y
00000768                          1254     
00000768  0C84 000002A8           1255     cmpi.l   #GROUND+60,d4
0000076E  6E00 FF46               1256     bgt      initializeInval1
00000772                          1257     
00000772  4EB9 000008C6           1258     jsr  invalidateObstacle1  
00000778  4CDF 7FFF               1259     movem.l (sp)+,ALL_REG
0000077C  4E75                    1260     rts
0000077E                          1261  
0000077E                          1262   *-----------------------------------------------------------
0000077E                          1263   initializeInval2:
0000077E  23FC 000001E0 0049A402  1264          move.l #OBSTACLE_START_TOP_X,INVAL2_TOP_X   
00000788  23FC 000001F4 0049A406  1265          move.l #OBSTACLE_START_TOP_Y,INVAL2_TOP_Y      
00000792  23FC 00000208 0049A40A  1266          move.l #OBSTACLE_START_BOTTOM_X,INVAL2_BOTTOM_X  
0000079C  23FC 000001F6 0049A40E  1267          move.l #OBSTACLE_START_TOP_Y+2,INVAL2_BOTTOM_Y 
000007A6                          1268          
000007A6                          1269          ;jsr renderInval2
000007A6  4EB9 00000924           1270           jsr  invalidateObstacle2
000007AC                          1271     
000007AC  4CDF 7FFF               1272           movem.l (sp)+,ALL_REG
000007B0  4E75                    1273           rts
000007B2                          1274   
000007B2                          1275   ;Draw Obstacle for the index
000007B2                          1276   
000007B2                          1277  updateInval2:
000007B2  48E7 FFFE               1278      movem.l     ALL_REG,-(sp)
000007B6                          1279      
000007B6                          1280      ; check if we need to draw this obstacle
000007B6                          1281      
000007B6  2239 0049A402           1282      move.l  INVAL2_TOP_X,d1
000007BC  0C81 000001E0           1283      cmpi.l  #OBSTACLE_START_TOP_X,d1
000007C2  6600 0008               1284      bne     continueInvalUpdate2
000007C6                          1285      
000007C6  4CDF 7FFF               1286      movem.l (sp)+,ALL_REG
000007CA  4E75                    1287      rts
000007CC                          1288      
000007CC                          1289  continueInvalUpdate2:
000007CC  2239 0049A3BE           1290      move.l  INVAL2_COUNTER,d1
000007D2  2401                    1291      move.l  d1,d2
000007D4  E882                    1292      asr.l   #OBSTACLE_SPEED_FRACTION,d2
000007D6                          1293      
000007D6  0C82 00000001           1294      cmpi.l  #1,d2
000007DC  6700 0010               1295      beq     moveInval2
000007E0  5281                    1296      addi.l  #1,d1
000007E2  23C1 0049A3BE           1297      move.l  d1,INVAL2_COUNTER
000007E8                          1298      
000007E8  4CDF 7FFF               1299      movem.l (sp)+,ALL_REG
000007EC  4E75                    1300      rts
000007EE                          1301      
000007EE                          1302  moveInval2:
000007EE                          1303   
000007EE  23FC 00000000 0049A3BE  1304     move.l   #0,INVAL2_COUNTER
000007F8                          1305     
000007F8  2239 0049A402           1306     move.l   INVAL2_TOP_X,d1
000007FE  2439 0049A406           1307     move.l   INVAL2_TOP_Y,d2
00000804  2639 0049A40A           1308     move.l   INVAL2_BOTTOM_X,d3
0000080A  2839 0049A40E           1309     move.l   INVAL2_BOTTOM_Y,d4
00000810                          1310     
00000810                          1311     ;Introduce Randomness here
00000810                          1312     
00000810  5581                    1313     subi.l   #2,d1
00000812  5482                    1314     addi.l   #2,d2
00000814  5483                    1315     addi.l   #2,d3
00000816  5484                    1316     addi.l   #2,d4
00000818                          1317     
00000818                          1318     ; update the positions in the memory 
00000818  23C1 0049A402           1319     move.l   d1,INVAL2_TOP_X
0000081E  23C2 0049A406           1320     move.l   d2,INVAL2_TOP_Y
00000824  23C3 0049A40A           1321     move.l   d3,INVAL2_BOTTOM_X
0000082A  23C4 0049A40E           1322     move.l   d4,INVAL2_BOTTOM_Y
00000830                          1323     
00000830  0C84 000002A8           1324     cmpi.l   #GROUND+60,d4
00000836  6E00 FF46               1325     bgt      initializeInval2
0000083A                          1326     
0000083A  4EB9 00000924           1327    jsr  invalidateObstacle2 
00000840                          1328    
00000840  4CDF 7FFF               1329     movem.l (sp)+,ALL_REG
00000844  4E75                    1330     rts
00000846                          1331      
00000846                          1332      
00000846                          1333      
00000846                          1334      
00000846                          1335      
00000846                          1336       
00000846                          1337  
00000846                          1338  
00000846                          1339  
00000846                          1340  
00000846                          1341  
00000846                          1342  
00000846                          1343  
00000846                          1344  
00000846                          1345  
00000846                          1346  
00000846                          1347  
00000846                          1348  
00000846                          1349  
00000846                          1350  
00000846                          1351  
00000846                          1352  
00000846                          1353  
00000846                          1354  
00000846                          1355  
00000846                          1356  
00000846                          1357  
00000846                          1358  
00000846                          1359  
00000846                          1360  
00000846                          1361  
00000846                          1362  
00000846                          1363  
00000846                          1364  
00000846                          1365  
00000846                          1366  
00000846                          1367  
00000846                          1368  
00000846                          1369  
00000846                          1370  
00000846                          1371  
00000846                          1372  
00000846                          1373  
00000846                          1374  
00000846                          1375  
00000846                          1376  
00000846                          1377  
00000846                          1378  
00000846                          1379  
00000846                          1380  
00000846                          1381  
00000846                          1382  
00000846                          1383  
00000846                          1384  
00000846                          1385  
00000846                          1386  
00000846                          1387  
00000846                          1388  
00000846                          1389  
00000846                          1390  
00000846                          1391  
00000846                          1392  
00000846                          1393  
00000846                          1394  
00000846                          1395  
00000846                          1396  
00000846                          1397  
00000846                          1398  
00000846                          1399  
00000846                          1400  
00000846                          1401  
00000846                          1402  
00000846                          1403  
00000846                          1404  
00000846                          1405  
00000846                          1406  
00000846                          1407  
00000846                          1408  
00000846                          1409  
00000846                          1410  
00000846                          1411  
00000846                          1412  
00000846                          1413  
00000846                          1414  
00000846                          1415  
00000846                          1416  
00000846                          1417      
00000846                          1418      
00000846                          1419      
00000846                          1420      
00000846                          1421      
00000846                          1422       
00000846                          1423  
00000846                          1424  
00000846                          1425  
00000846                          1426  
00000846                          1427  
00000846                          1428  
00000846                          1429  
00000846                          1430  
00000846                          1431  
00000846                          1432  
00000846                          1433  
00000846                          1434  
00000846                          1435  
00000846                          1436  
00000846                          1437  
00000846                          1438  
00000846                          1439  
00000846                          1440  
00000846                          1441  
00000846                          1442  
00000846                          1443  
00000846                          1444  
00000846                          1445  
00000846                          1446  
00000846                          1447  
00000846                          1448  
00000846                          1449  
00000846                          1450  
00000846                          1451  
00000846                          1452  
00000846                          1453  
00000846                          1454  
00000846                          1455  
00000846                          1456  
00000846                          1457  
00000846                          1458  
00000846                          1459  
00000846                          1460  
00000846                          1461  
00000846                          1462  
00000846                          1463  
00000846                          1464  
00000846                          1465  
00000846                          1466  
00000846                          1467  
00000846                          1468  
00000846                          1469  
00000846                          1470  
00000846                          1471  
00000846                          1472  
00000846                          1473  
00000846                          1474  
00000846                          1475  
00000846                          1476  
00000846                          1477  
00000846                          1478  
00000846                          1479  
00000846                          1480  
00000846                          1481  
00000846                          1482  
00000846                          1483  
00000846                          1484  
00000846                          1485  
00000846                          1486  
00000846                          1487  
00000846                          1488  
00000846                          1489  
00000846                          1490  
00000846                          1491  
00000846                          1492  
00000846                          1493  
00000846                          1494  
00000846                          1495  
00000846                          1496  
00000846                          1497  
00000846                          1498  
00000846                          1499  
00000846                          1500  
00000846                          1501  
00000846                          1502  
00000846                          1503  
00000846                          1504  
00000846                          1505  
00000846                          1506  
00000846                          1507  
00000846                          1508  
00000846                          1509  
00000846                          1510  
00000846                          1511  
00000846                          1512  
00000846                          1513  
00000846                          1514  -------------------- end include --------------------
00000846                          1515      INCLUDE     "RenderObstacle.x68"
00000846                          1516   *-----------------------------------------------------------
00000846                          1517  
00000846                          1518  renderObstacle1   
00000846  48E7 FFFE               1519          movem.l ALL_REG,-(sp)
0000084A                          1520          
0000084A                          1521          ;set pen color
0000084A  7200                    1522          move.l  #$00000000,d1
0000084C  103C 0050               1523          move.b  #80,d0
00000850  4E4F                    1524          trap    #15
00000852                          1525                       
00000852                          1526          ;set fill color
00000852  223C 0000FF00           1527          move.l  #$0000FF00,d1
00000858  103C 0051               1528          move.b  #81,d0
0000085C  4E4F                    1529          trap    #15
0000085E                          1530          
0000085E  2239 0049A3D2           1531          move.l   OBSTACLE1_TOP_X,d1
00000864  2439 0049A3D6           1532          move.l   OBSTACLE1_TOP_Y,d2
0000086A  2639 0049A3DA           1533          move.l   OBSTACLE1_BOTTOM_X,d3
00000870  2839 0049A3DE           1534          move.l   OBSTACLE1_BOTTOM_Y,d4
00000876                          1535          
00000876  7057                    1536          move.l  #DRAW_FILLED_RECTANGLE_TRAP,d0
00000878  4E4F                    1537          trap    #15
0000087A                          1538          
0000087A  103C 005E               1539          move.b #DUMP_SCREEN_BUFFER,d0
0000087E  4E4F                    1540          trap   #15
00000880                          1541          
00000880  4CDF 7FFF               1542          movem.l (sp)+,ALL_REG
00000884  4E75                    1543          rts
00000886                          1544          
00000886                          1545  renderObstacle2   
00000886  48E7 FFFE               1546          movem.l ALL_REG,-(sp)
0000088A                          1547          
0000088A                          1548          ;set pen color
0000088A  7200                    1549          move.l  #$00000000,d1
0000088C  103C 0050               1550          move.b  #80,d0
00000890  4E4F                    1551          trap    #15
00000892                          1552                       
00000892                          1553          ;set fill color
00000892  223C 0000FF00           1554          move.l  #$0000FF00,d1
00000898  103C 0051               1555          move.b  #81,d0
0000089C  4E4F                    1556          trap    #15
0000089E                          1557          
0000089E  2239 0049A3E2           1558          move.l   OBSTACLE2_TOP_X,d1
000008A4  2439 0049A3E6           1559          move.l   OBSTACLE2_TOP_Y,d2
000008AA  2639 0049A3EA           1560          move.l   OBSTACLE2_BOTTOM_X,d3
000008B0  2839 0049A3EE           1561          move.l   OBSTACLE2_BOTTOM_Y,d4
000008B6                          1562          
000008B6  7057                    1563          move.l  #DRAW_FILLED_RECTANGLE_TRAP,d0
000008B8  4E4F                    1564          trap    #15
000008BA                          1565          
000008BA  103C 005E               1566          move.b #DUMP_SCREEN_BUFFER,d0
000008BE  4E4F                    1567          trap   #15
000008C0                          1568          
000008C0  4CDF 7FFF               1569          movem.l (sp)+,ALL_REG
000008C4  4E75                    1570          rts
000008C6                          1571          
000008C6                          1572  invalidateObstacle1:
000008C6                          1573  
000008C6  41F9 0000DB00           1574      lea BackGroundImage,a0
000008CC                          1575      
000008CC  48E7 FFFE               1576      movem.l ALL_REG,-(sp)
000008D0                          1577      
000008D0  23FC 00000000 0049A358  1578      move.l  #0,(SCREEN_OFFSET_X)
000008DA  23FC 00000000 0049A35C  1579      move.l  #0,(SCREEN_OFFSET_Y)
000008E4                          1580      
000008E4  2239 0049A3F2           1581      move.l  INVAL1_TOP_X,d1
000008EA  2439 0049A3F6           1582      move.l  INVAL1_TOP_Y,d2
000008F0                          1583          
000008F0  23C1 0049A360           1584      move.l  d1,(IMAGE_START_X)
000008F6  23C2 0049A364           1585      move.l  d2,(IMAGE_START_Y)
000008FC                          1586          
000008FC  2239 0049A3FA           1587      move.l  INVAL1_BOTTOM_X,d1
00000902  2439 0049A3FE           1588      move.l  INVAL1_BOTTOM_Y,d2
00000908                          1589      
00000908  23C1 0049A368           1590      move.l  d1,(IMAGE_END_X)
0000090E  23C2 0049A36C           1591      move.l  d2,(IMAGE_END_Y)
00000914                          1592      
00000914  4EB8 0124               1593      jsr     renderImage
00000918                          1594      
00000918  103C 005E               1595      move.b #DUMP_SCREEN_BUFFER,d0
0000091C  4E4F                    1596      trap   #15
0000091E                          1597     
0000091E  4CDF 7FFF               1598      movem.l (sp)+,ALL_REG
00000922  4E75                    1599      rts
00000924                          1600      
00000924                          1601  invalidateObstacle2:
00000924                          1602  
00000924  41F9 0000DB00           1603      lea BackGroundImage,a0
0000092A                          1604      
0000092A  48E7 FFFE               1605      movem.l ALL_REG,-(sp)
0000092E                          1606      
0000092E  23FC 00000000 0049A358  1607      move.l  #0,(SCREEN_OFFSET_X)
00000938  23FC 00000000 0049A35C  1608      move.l  #0,(SCREEN_OFFSET_Y)
00000942                          1609      
00000942  2239 0049A402           1610      move.l  INVAL2_TOP_X,d1
00000948  2439 0049A406           1611      move.l  INVAL2_TOP_Y,d2
0000094E                          1612          
0000094E  23C1 0049A360           1613      move.l  d1,(IMAGE_START_X)
00000954  23C2 0049A364           1614      move.l  d2,(IMAGE_START_Y)
0000095A                          1615          
0000095A  2239 0049A40A           1616      move.l  INVAL2_BOTTOM_X,d1
00000960  2439 0049A40E           1617      move.l  INVAL2_BOTTOM_Y,d2
00000966                          1618      
00000966  23C1 0049A368           1619      move.l  d1,(IMAGE_END_X)
0000096C  23C2 0049A36C           1620      move.l  d2,(IMAGE_END_Y)
00000972                          1621      
00000972  4EB8 0124               1622      jsr     renderImage
00000976                          1623      
00000976  103C 005E               1624      move.b #DUMP_SCREEN_BUFFER,d0
0000097A  4E4F                    1625      trap   #15
0000097C                          1626                 
0000097C  4CDF 7FFF               1627      movem.l (sp)+,ALL_REG
00000980  4E75                    1628      rts
00000982                          1629  
00000982                          1630      
00000982                          1631             
00000982                          1632  
00000982                          1633  
00000982                          1634  
00000982                          1635  
00000982                          1636  
00000982                          1637  
00000982                          1638  
00000982                          1639  
00000982                          1640  
00000982                          1641  
00000982                          1642  
00000982                          1643  
00000982                          1644  
00000982                          1645  
00000982                          1646  
00000982                          1647  
00000982                          1648  
00000982                          1649  
00000982                          1650  
00000982                          1651  
00000982                          1652  
00000982                          1653  
00000982                          1654  
00000982                          1655  
00000982                          1656  
00000982                          1657  
00000982                          1658  
00000982                          1659  
00000982                          1660  
00000982                          1661  
00000982                          1662  
00000982                          1663  
00000982                          1664  
00000982                          1665  
00000982                          1666  -------------------- end include --------------------
00000982                          1667      INCLUDE     "ObstacleGenerator.x68"
00000982                          1668   *-----------------------------------------------------------
00000982                          1669       
00000982                          1670  incrementGapCounter1:
00000982  5281                    1671      addi.l  #1,d1
00000984  23C1 0049A3F2           1672      move.l  d1,INVAL1_TOP_X
0000098A                          1673      
0000098A  4CDF 7FFF               1674      movem.l (sp)+,ALL_REG
0000098E  4E75                    1675      rts
00000990                          1676       
00000990                          1677  gapGenerator1:
00000990                          1678      
00000990  48E7 FFFE               1679      movem.l ALL_REG,-(sp)
00000994                          1680      
00000994  2039 0049A432           1681      move.l  GENERATE_GAP_COUNTER_SMALL,d0
0000099A  2200                    1682      move.l  d0,d1
0000099C  E081                    1683      asr.l   #8,d1
0000099E  E481                    1684      asr.l   #2,d1
000009A0                          1685  
000009A0  0C81 00000001           1686      cmpi.l  #1,d1
000009A6  6700 0010               1687      beq     generateGap1
000009AA                          1688      
000009AA  5280                    1689      addi.l  #1,d0
000009AC  23C0 0049A432           1690      move.l  d0,GENERATE_GAP_COUNTER_SMALL
000009B2  4CDF 7FFF               1691      movem.l (sp)+,ALL_REG
000009B6  4E75                    1692      rts
000009B8                          1693  
000009B8                          1694  generateGap1:
000009B8                          1695      
000009B8  23FC 00000000 0049A432  1696      move.l  #0,GENERATE_GAP_COUNTER_SMALL
000009C2                          1697     
000009C2  2239 0049A3F2           1698      move.l  INVAL1_TOP_X,d1
000009C8  0C81 000001E0           1699      cmpi.l  #OBSTACLE_START_TOP_X,d1
000009CE  67B2                    1700      beq     incrementGapCounter1
000009D0                          1701      
000009D0  4CDF 7FFF               1702      movem.l (sp)+,ALL_REG
000009D4  4E75                    1703      rts
000009D6                          1704      
000009D6                          1705  startNextObstacle1:
000009D6  2239 0049A3D2           1706      move.l  OBSTACLE1_TOP_X,d1
000009DC  2401                    1707      move.l  d1,d2
000009DE                          1708      
000009DE  0C82 000001E0           1709      cmpi.l  #OBSTACLE_START_TOP_X,d2
000009E4  6600 0022               1710      bne     returnObstacleGenerator1
000009E8                          1711      
000009E8  5281                    1712      addi.l  #1,d1
000009EA  23C1 0049A3D2           1713      move.l  d1,OBSTACLE1_TOP_X
000009F0                          1714      
000009F0  4CDF 7FFF               1715      movem.l (sp)+,ALL_REG   
000009F4  4E75                    1716      rts
000009F6                          1717  
000009F6                          1718  nextObstacleGenerator1:
000009F6                          1719  
000009F6  48E7 FFFE               1720      movem.l ALL_REG,-(sp)
000009FA                          1721      
000009FA  2239 0049A3F6           1722      move.l  INVAL1_TOP_Y,d1
00000A00                          1723  
00000A00  0C81 00000212           1724      cmpi.l  #OBSTACLE_START_TOP_Y+30,d1
00000A06  6ECE                    1725      bgt     startNextObstacle1
00000A08                          1726  
00000A08                          1727  returnObstacleGenerator1:
00000A08  4CDF 7FFF               1728      movem.l (sp)+,ALL_REG   
00000A0C  4E75                    1729      rts
00000A0E                          1730      
00000A0E                          1731      
00000A0E                          1732      
00000A0E                          1733  incrementGapCounter2:
00000A0E  5281                    1734      addi.l  #1,d1
00000A10  23C1 0049A402           1735      move.l  d1,INVAL2_TOP_X
00000A16                          1736      
00000A16  4CDF 7FFF               1737      movem.l (sp)+,ALL_REG
00000A1A  4E75                    1738      rts
00000A1C                          1739       
00000A1C                          1740  gapGenerator2:
00000A1C                          1741      
00000A1C  48E7 FFFE               1742      movem.l ALL_REG,-(sp)
00000A20                          1743      
00000A20  2039 0049A436           1744      move.l  GENERATE_GAP_COUNTER_BIG,d0
00000A26  2200                    1745      move.l  d0,d1
00000A28  EC81                    1746      asr.l   #6,d1
00000A2A  E481                    1747      asr.l   #2,d1
00000A2C                          1748  
00000A2C  0C81 00000001           1749      cmpi.l  #1,d1
00000A32  6700 0010               1750      beq     generateGap2
00000A36                          1751      
00000A36  5280                    1752      addi.l  #1,d0
00000A38  23C0 0049A436           1753      move.l  d0,GENERATE_GAP_COUNTER_BIG
00000A3E  4CDF 7FFF               1754      movem.l (sp)+,ALL_REG
00000A42  4E75                    1755      rts
00000A44                          1756  
00000A44                          1757  generateGap2:
00000A44                          1758      
00000A44  23FC 00000000 0049A436  1759      move.l  #0,GENERATE_GAP_COUNTER_BIG
00000A4E                          1760     
00000A4E  2239 0049A402           1761      move.l  INVAL2_TOP_X,d1
00000A54  0C81 000001E0           1762      cmpi.l  #OBSTACLE_START_TOP_X,d1
00000A5A  67B2                    1763      beq     incrementGapCounter2
00000A5C                          1764      
00000A5C  4CDF 7FFF               1765      movem.l (sp)+,ALL_REG
00000A60  4E75                    1766      rts
00000A62                          1767      
00000A62                          1768  startNextObstacle2:
00000A62  2239 0049A3E2           1769      move.l  OBSTACLE2_TOP_X,d1
00000A68  2401                    1770      move.l  d1,d2
00000A6A                          1771      
00000A6A  0C82 000001E0           1772      cmpi.l  #OBSTACLE_START_TOP_X,d2
00000A70  6600 0022               1773      bne     returnObstacleGenerator2
00000A74                          1774      
00000A74  5281                    1775      addi.l  #1,d1
00000A76  23C1 0049A3E2           1776      move.l  d1,OBSTACLE2_TOP_X
00000A7C                          1777      
00000A7C  4CDF 7FFF               1778      movem.l (sp)+,ALL_REG   
00000A80  4E75                    1779      rts
00000A82                          1780  
00000A82                          1781  nextObstacleGenerator2:
00000A82                          1782  
00000A82  48E7 FFFE               1783      movem.l ALL_REG,-(sp)
00000A86                          1784      
00000A86  2239 0049A406           1785      move.l  INVAL2_TOP_Y,d1
00000A8C                          1786  
00000A8C  0C81 00000212           1787      cmpi.l  #OBSTACLE_START_TOP_Y+30,d1
00000A92  6ECE                    1788      bgt     startNextObstacle2
00000A94                          1789  
00000A94                          1790  returnObstacleGenerator2:
00000A94  4CDF 7FFF               1791      movem.l (sp)+,ALL_REG   
00000A98  4E75                    1792      rts
00000A9A                          1793  
00000A9A                          1794  
00000A9A                          1795  
00000A9A                          1796  
00000A9A                          1797  
00000A9A                          1798  
00000A9A                          1799  
00000A9A                          1800  
00000A9A                          1801  
00000A9A                          1802  
00000A9A                          1803  
00000A9A                          1804  
00000A9A                          1805  
00000A9A                          1806  
00000A9A                          1807  
00000A9A                          1808  
00000A9A                          1809  -------------------- end include --------------------
00000A9A                          1810      INCLUDE     "UpdateScore.x68"
00000A9A                          1811  
00000A9A                          1812  updateScoreNow:
00000A9A  23FC 00000000 0049A43A  1813          move.l  #0,SCORE_COUNTER
00000AA4  2239 0049A43E           1814          move.l  ACTUAL_SCORE,d1
00000AAA  5281                    1815          addi.l  #1,d1
00000AAC  23C1 0049A43E           1816          move.l  d1,ACTUAL_SCORE
00000AB2                          1817          
00000AB2                          1818          ;wipe out previous score
00000AB2  4EB9 00000C84           1819          jsr wipeOutPrevScore
00000AB8                          1820          
00000AB8  2401                    1821          move.l  d1,d2
00000ABA  84FC 000A               1822          divu    #10,d2
00000ABE  2602                    1823          move.l  d2,d3
00000AC0                          1824          
00000AC0  E083                    1825          asr.l   #8,d3
00000AC2  E083                    1826          asr.l   #8,d3
00000AC4                          1827          
00000AC4  2F03                    1828          move.l  d3,-(sp)
00000AC6  2F3C 000000E6           1829          move.l  #SCORE_ONES_LOCATION_X,-(sp)
00000ACC  4EB9 00000B60           1830          jsr displayScore
00000AD2  504F                    1831          add #8,sp
00000AD4                          1832  
00000AD4  4842                    1833          swap    d2
00000AD6  E082                    1834          asr.l   #8,d2
00000AD8  E082                    1835          asr.l   #8,d2
00000ADA                          1836   
00000ADA  84FC 000A               1837          divu    #10,d2
00000ADE  2602                    1838          move.l  d2,d3  
00000AE0                          1839  
00000AE0  E083                    1840          asr.l   #8,d3
00000AE2  E083                    1841          asr.l   #8,d3
00000AE4                          1842  
00000AE4  2F03                    1843          move.l  d3,-(sp)
00000AE6  2F3C 000000D7           1844          move.l  #SCORE_TENS_LOCATION_X,-(sp)
00000AEC  4EB9 00000B60           1845          jsr displayScore
00000AF2  504F                    1846          add #8,sp
00000AF4                          1847          
00000AF4  4842                    1848          swap    d2
00000AF6  E082                    1849          asr.l   #8,d2
00000AF8  E082                    1850          asr.l   #8,d2
00000AFA                          1851          
00000AFA  84FC 000A               1852          divu    #10,d2
00000AFE  2602                    1853          move.l  d2,d3
00000B00                          1854          
00000B00  E083                    1855          asr.l   #8,d3
00000B02  E083                    1856          asr.l   #8,d3
00000B04                          1857          
00000B04  2F03                    1858          move.l  d3,-(sp)
00000B06  2F3C 000000C8           1859          move.l  #SCORE_HUNDREDS_LOCATION_X,-(sp)
00000B0C  4EB9 00000B60           1860          jsr     displayScore
00000B12  504F                    1861          add     #8,sp
00000B14                          1862          
00000B14  4842                    1863          swap    d2
00000B16  E082                    1864          asr.l   #8,d2
00000B18  E082                    1865          asr.l   #8,d2
00000B1A                          1866          
00000B1A  84FC 000A               1867          divu    #10,d2
00000B1E  2602                    1868          move.l  d2,d3
00000B20                          1869          
00000B20  E083                    1870          asr.l   #8,d3
00000B22  E083                    1871          asr.l   #8,d3
00000B24                          1872          
00000B24  2F03                    1873          move.l  d3,-(sp)
00000B26  2F3C 000000B9           1874          move.l  #SCORE_THOUSANDS_LOCATION_X,-(sp)
00000B2C  4EB9 00000B60           1875          jsr     displayScore
00000B32  504F                    1876          add     #8,sp
00000B34                          1877          
00000B34  4CDF 7FFF               1878          movem.l (sp)+,ALL_REG
00000B38  4E75                    1879          rts
00000B3A                          1880  
00000B3A                          1881  
00000B3A                          1882  updateScore:
00000B3A  48E7 FFFE               1883          movem.l ALL_REG,-(sp)
00000B3E                          1884          
00000B3E  2239 0049A43A           1885          move.l  SCORE_COUNTER,d1
00000B44  5281                    1886          addi.l  #1,d1
00000B46  23C1 0049A43A           1887          move.l  d1,SCORE_COUNTER
00000B4C                          1888          
00000B4C  2401                    1889          move.l  d1,d2
00000B4E  E082                    1890          asr.l   #8,d2
00000B50                          1891          ;asr.l   #4,d2
00000B50                          1892          
00000B50  0C82 00000001           1893          cmpi.l  #1,d2
00000B56  6700 FF42               1894          beq     updateScoreNow
00000B5A                          1895                 
00000B5A  4CDF 7FFF               1896          movem.l (sp)+,ALL_REG
00000B5E  4E75                    1897          rts
00000B60                          1898  
00000B60                          1899  
00000B60                          1900  displayScore
00000B60  48E7 FFFE               1901          movem.l ALL_REG,-(sp)
00000B64                          1902                  
00000B64  222F 0044               1903          move.l          68(sp),d1
00000B68  2E2F 0040               1904          move.l          64(sp),d7
00000B6C                          1905          
00000B6C                          1906        ;load effective address off the seven segment display table      
00000B6C  43F9 0049A45E           1907          lea SEVEN_SEGMENT_TABLE, a1
00000B72  1A31 1000               1908          move.b          (a1,d1),d5
00000B76                          1909          
00000B76                          1910          ; set pen color
00000B76  223C 00FFFFFF           1911          move.l #SEGMENT_COLOR,d1
00000B7C  7050                    1912          move.l #PEN_COLOR_TRAP_CODE,d0
00000B7E  4E4F                    1913          trap #15
00000B80                          1914                  
00000B80                          1915          ;and with the appropriate segment and draw the seven segment display
00000B80  1C05                    1916          move.b          d5,d6
00000B82  0206 0040               1917          andi.b          #$40,d6
00000B86  6600 004A               1918          bne             drawSegmentA
00000B8A                          1919  
00000B8A                          1920  continueA:        
00000B8A  1C05                    1921          move.b          d5,d6
00000B8C  0206 0020               1922          andi.b          #$20,d6
00000B90  6600 0058               1923          bne             drawSegmentB
00000B94                          1924  
00000B94                          1925  continueB:   
00000B94  1C05                    1926          move.b          d5,d6
00000B96  0206 0010               1927          andi.b          #$10,d6
00000B9A  6600 006C               1928          bne             drawSegmentC
00000B9E                          1929  
00000B9E                          1930  continueC:       
00000B9E  1C05                    1931          move.b          d5,d6
00000BA0  0206 0008               1932          andi.b          #$8,d6
00000BA4  6600 0082               1933          bne             drawSegmentD
00000BA8                          1934  
00000BA8                          1935  continueD:               
00000BA8  1C05                    1936          move.b          d5,d6
00000BAA  0206 0004               1937          andi.b          #$4,d6
00000BAE  6600 0092               1938          bne             drawSegmentE
00000BB2                          1939  
00000BB2                          1940  continueE:       
00000BB2  1C05                    1941          move.b          d5,d6
00000BB4  0206 0002               1942          andi.b          #$2,d6
00000BB8  6600 009C               1943          bne             drawSegmentF
00000BBC                          1944  
00000BBC                          1945  continueF:       
00000BBC  1C05                    1946          move.b          d5,d6
00000BBE  0206 0001               1947          andi.b          #$1,d6
00000BC2  6600 00A6               1948          bne             drawSegmentG
00000BC6                          1949         
00000BC6                          1950  continueG:
00000BC6                          1951          
00000BC6  103C 005E               1952           move.b #DUMP_SCREEN_BUFFER,d0
00000BCA  4E4F                    1953           trap   #15
00000BCC                          1954      
00000BCC                          1955  
00000BCC  4CDF 7FFF               1956          movem.l (sp)+,ALL_REG
00000BD0  4E75                    1957          rts
00000BD2                          1958  
00000BD2                          1959  drawSegmentA:
00000BD2                          1960          
00000BD2  3207                    1961          move.w  d7,d1
00000BD4  343C 02CA               1962          move.w #SCORE_DISPLAY_LOCATION_Y,d2
00000BD8                          1963          
00000BD8  3007                    1964          move.w  d7,d0
00000BDA  0640 000A               1965          addi.w  #SEGMENT_SIZE,d0
00000BDE  3600                    1966          move.w  d0,d3
00000BE0  383C 02CA               1967          move.w #SCORE_DISPLAY_LOCATION_Y,d4
00000BE4                          1968          
00000BE4  7054                    1969          move.l  #MOVE_LINE_TRAP,d0
00000BE6  4E4F                    1970          trap    #15              
00000BE8  60A0                    1971          bra continueA
00000BEA                          1972          
00000BEA                          1973  drawSegmentB:
00000BEA  3007                    1974          move.w d7,d0
00000BEC  0640 000A               1975          addi.w  #SEGMENT_SIZE,d0
00000BF0  3200                    1976          move.w  d0,d1
00000BF2  343C 02CA               1977          move.w  #SCORE_DISPLAY_LOCATION_Y,d2
00000BF6                          1978          
00000BF6  3007                    1979          move.w  d7,d0
00000BF8  0640 000A               1980          addi.w  #SEGMENT_SIZE,d0
00000BFC  3600                    1981          move.w  d0,d3
00000BFE  383C 02D4               1982          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d4
00000C02                          1983          
00000C02  7054                    1984          move.l  #MOVE_LINE_TRAP,d0
00000C04  4E4F                    1985          trap    #15              
00000C06  608C                    1986          bra continueB
00000C08                          1987  
00000C08                          1988  drawSegmentC:
00000C08  3007                    1989          move.w  d7,d0
00000C0A  0640 000A               1990          addi.w  #SEGMENT_SIZE,d0
00000C0E  3200                    1991          move.w  d0,d1
00000C10  343C 02D4               1992          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d2
00000C14                          1993          
00000C14                          1994          ;move.w #SCORE_DISPLAY_LOCATION_X+SEGMENT_SIZE,d3
00000C14  3007                    1995          move.w  d7,d0
00000C16  0640 000A               1996          addi.w  #SEGMENT_SIZE,d0
00000C1A  3600                    1997          move.w  d0,d3
00000C1C  383C 02DE               1998          move.w #SCORE_DISPLAY_LOCATION_Y+2*SEGMENT_SIZE,d4
00000C20                          1999          
00000C20  7054                    2000          move.l  #MOVE_LINE_TRAP,d0
00000C22  4E4F                    2001          trap    #15              
00000C24  6000 FF78               2002          bra continueC
00000C28                          2003  
00000C28                          2004  drawSegmentD:
00000C28                          2005         ; move.w #SCORE_DISPLAY_LOCATION_X+SEGMENT_SIZE,d1
00000C28  3007                    2006          move.w   d7,d0
00000C2A  0640 000A               2007          addi.w    #SEGMENT_SIZE,d0
00000C2E  3200                    2008          move.w    d0,d1
00000C30  343C 02DE               2009          move.w  #SCORE_DISPLAY_LOCATION_Y+2*SEGMENT_SIZE,d2
00000C34                          2010          
00000C34  3607                    2011          move.w  d7,d3
00000C36  383C 02DE               2012          move.w #SCORE_DISPLAY_LOCATION_Y+2*SEGMENT_SIZE,d4
00000C3A                          2013          
00000C3A  7054                    2014          move.l  #MOVE_LINE_TRAP,d0
00000C3C  4E4F                    2015          trap    #15              
00000C3E  6000 FF68               2016          bra continueD
00000C42                          2017  
00000C42                          2018  drawSegmentE:
00000C42  3207                    2019          move.w d7,d1
00000C44  343C 02DE               2020          move.w #SCORE_DISPLAY_LOCATION_Y+2*SEGMENT_SIZE,d2
00000C48                          2021          
00000C48  3607                    2022          move.w d7,d3
00000C4A  383C 02D4               2023          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d4
00000C4E                          2024          
00000C4E  7054                    2025          move.l  #MOVE_LINE_TRAP,d0
00000C50  4E4F                    2026          trap    #15              
00000C52  6000 FF5E               2027          bra continueE
00000C56                          2028  
00000C56                          2029  drawSegmentF:
00000C56  3207                    2030          move.w d7,d1
00000C58  343C 02D4               2031          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d2
00000C5C                          2032          
00000C5C  3607                    2033          move.w d7,d3
00000C5E  383C 02CA               2034          move.w #SCORE_DISPLAY_LOCATION_Y,d4
00000C62                          2035          
00000C62  7054                    2036          move.l  #MOVE_LINE_TRAP,d0
00000C64  4E4F                    2037          trap    #15              
00000C66  6000 FF54               2038          bra continueF
00000C6A                          2039  
00000C6A                          2040  drawSegmentG:
00000C6A  3207                    2041          move.w d7,d1
00000C6C  343C 02D4               2042          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d2
00000C70                          2043          
00000C70  3007                    2044          move.w  d7,d0
00000C72  0640 000A               2045          addi.w  #SEGMENT_SIZE,d0
00000C76  3600                    2046          move.w  d0,d3
00000C78  383C 02D4               2047          move.w #SCORE_DISPLAY_LOCATION_Y+SEGMENT_SIZE,d4
00000C7C                          2048          
00000C7C  7054                    2049          move.l  #MOVE_LINE_TRAP,d0
00000C7E  4E4F                    2050          trap    #15              
00000C80  6000 FF44               2051          bra continueG
00000C84                          2052  
00000C84                          2053  
00000C84                          2054  
00000C84                          2055  
00000C84                          2056  
00000C84                          2057  wipeOutPrevScore:
00000C84  48E7 FFFE               2058          movem.l ALL_REG,-(sp)
00000C88                          2059          
00000C88                          2060          ; a filled rectange in the score area
00000C88  243C 00353E44           2061          move.l  #$00353E44,d2
00000C8E                          2062                  
00000C8E  2202                    2063          move.l  d2,d1
00000C90  103C 0050               2064          move.b  #80,d0
00000C94  4E4F                    2065          trap    #15
00000C96                          2066          
00000C96  2202                    2067          move.l  d2,d1
00000C98  7051                    2068          move.l  #81,d0
00000C9A  4E4F                    2069          trap    #15
00000C9C                          2070          
00000C9C  223C 00000082           2071          move.l  #130,d1
00000CA2  243C 000002C1           2072          move.l  #705,d2
00000CA8  263C 000000FA           2073          move.l  #250,d3
00000CAE  283C 000002E4           2074          move.l  #740,d4
00000CB4                          2075          
00000CB4  7057                    2076          move.l  #DRAW_FILLED_RECTANGLE_TRAP,d0
00000CB6  4E4F                    2077          trap    #15
00000CB8                          2078          
00000CB8  103C 005E               2079          move.b #DUMP_SCREEN_BUFFER,d0
00000CBC  4E4F                    2080          trap   #15
00000CBE                          2081                  
00000CBE  4CDF 7FFF               2082          movem.l (sp)+,ALL_REG
00000CC2  4E75                    2083          rts
00000CC4                          2084  
00000CC4                          2085  
00000CC4                          2086  
00000CC4                          2087  
00000CC4                          2088  
00000CC4                          2089  
00000CC4                          2090  
00000CC4                          2091  
00000CC4                          2092  
00000CC4                          2093  
00000CC4                          2094  
00000CC4                          2095  
00000CC4                          2096  
00000CC4                          2097  
00000CC4                          2098  
00000CC4                          2099  
00000CC4                          2100  
00000CC4                          2101  
00000CC4                          2102  
00000CC4                          2103  
00000CC4                          2104  
00000CC4                          2105  
00000CC4                          2106  
00000CC4                          2107  
00000CC4                          2108  
00000CC4                          2109  
00000CC4                          2110  
00000CC4                          2111  
00000CC4                          2112  
00000CC4                          2113  
00000CC4                          2114  
00000CC4                          2115  
00000CC4                          2116  
00000CC4                          2117  
00000CC4                          2118  
00000CC4                          2119  
00000CC4                          2120  
00000CC4                          2121  
00000CC4                          2122  
00000CC4                          2123  -------------------- end include --------------------
00000CC4                          2124      INCLUDE     "CollisionDetection.x68"
00000CC4                          2125  continue1:
00000CC4                          2126  
00000CC4  0CB9 0000026C 0049A3F6  2127      cmpi.l  #GROUND,INVAL1_TOP_Y
00000CCE  6E00 0008               2128      bgt     continue2
00000CD2                          2129      
00000CD2  4CDF 7FFF               2130      movem.l (sp)+,ALL_REG
00000CD6  4E75                    2131      rts
00000CD8                          2132      
00000CD8                          2133  continue2:
00000CD8  0CB9 0000026C 0049A3DE  2134      cmpi.l  #GROUND,OBSTACLE1_BOTTOM_Y
00000CE2  6D00 0008               2135      blt    continue3
00000CE6                          2136      
00000CE6                          2137      
00000CE6  4CDF 7FFF               2138      movem.l (sp)+,ALL_REG
00000CEA  4E75                    2139      rts   
00000CEC                          2140      
00000CEC                          2141  continue3:
00000CEC                          2142  
00000CEC  2039 0049A446           2143      move.l  COLLISION_COUNTER,d0
00000CF2  5280                    2144      addi.l  #1,d0
00000CF4  23C0 0049A446           2145      move.l  d0,COLLISION_COUNTER
00000CFA                          2146      
00000CFA  2200                    2147      move.l  d0,d1
00000CFC  EC81                    2148      asr.l   #6,d1
00000CFE                          2149      
00000CFE  0C81 00000001           2150      cmpi.l  #1,d1
00000D04  6700 000E               2151      beq     continue4
00000D08                          2152      
00000D08  4CDF 7FFF               2153      movem.l (sp)+,ALL_REG
00000D0C  4E75                    2154      rts
00000D0E                          2155      
00000D0E                          2156  continue5:
00000D0E  4CDF 7FFF               2157      movem.l (sp)+,ALL_REG
00000D12  4E75                    2158      rts
00000D14                          2159      
00000D14                          2160  continue4:
00000D14  23FC 00000000 0049A446  2161      move.l  #0,COLLISION_COUNTER
00000D1E                          2162          
00000D1E                          2163      ; Player lost life
00000D1E  2A39 0049A442           2164      move.l  PLAYER_LIVES,d5
00000D24  0C85 00000000           2165      cmpi.l  #0,d5
00000D2A  67E2                    2166      beq     continue5
00000D2C                          2167      
00000D2C  5385                    2168      sub.l  #1,d5
00000D2E  23C5 0049A442           2169      move.l  d5,PLAYER_LIVES
00000D34                          2170      
00000D34                          2171      ;resetGame
00000D34                          2172      
00000D34                          2173      wipeOutPrevLives:        
00000D34                          2174          ; a filled rectange in the score area
00000D34  243C 00353E44           2175          move.l  #$00353E44,d2
00000D3A                          2176                  
00000D3A  2202                    2177          move.l  d2,d1
00000D3C  103C 0050               2178          move.b  #80,d0
00000D40  4E4F                    2179          trap    #15
00000D42                          2180          
00000D42  2202                    2181          move.l  d2,d1
00000D44  7051                    2182          move.l  #81,d0
00000D46  4E4F                    2183          trap    #15
00000D48                          2184          
00000D48  223C 0000038E           2185          move.l  #910,d1
00000D4E  243C 000002C1           2186          move.l  #705,d2
00000D54  263C 000003AC           2187          move.l  #940,d3
00000D5A  283C 000002E4           2188          move.l  #740,d4
00000D60                          2189          
00000D60  7057                    2190          move.l  #DRAW_FILLED_RECTANGLE_TRAP,d0
00000D62  4E4F                    2191          trap    #15
00000D64                          2192          
00000D64  103C 005E               2193          move.b #DUMP_SCREEN_BUFFER,d0
00000D68  4E4F                    2194          trap   #15
00000D6A                          2195          
00000D6A  2F05                    2196          move.l  d5,-(sp)
00000D6C  2F3C 00000390           2197          move.l  #PLAYER_LIVES_LOCATION_X,-(sp)
00000D72  4EB8 0B60               2198          jsr     displayScore
00000D76  504F                    2199          add     #8,sp
00000D78                          2200    
00000D78                          2201   initializeGame1:     
00000D78  23FC 000001F4 0049A370  2202          move.l  #500,(PLAYER_POSITION_X)
00000D82  23FC 000001F4 0049A374  2203          move.l  #500,(PLAYER_POSITION_Y)
00000D8C                          2204          
00000D8C  23FC 00000000 0049A398  2205          move.l  #0,LEFT_KEY_COUNTER
00000D96  23FC 00000000 0049A39C  2206          move.l  #0,RIGHT_KEY_COUNTER
00000DA0  23FC 00000000 0049A3AE  2207          move.l  #0,PREVIOUS_SPEED
00000DAA  23FC 00000000 0049A3A2  2208          move.l  #0,YDELTA
00000DB4  23FC 00000000 0049A3B2  2209          move.l  #0,OBSTACLE1_COUNTER
00000DBE  23FC 00000000 0049A3B6  2210          move.l  #0,OBSTACLE2_COUNTER
00000DC8                          2211          
00000DC8  13FC 0001 0049A394      2212          move.b  #1,LEFT_NOT_PRESSED  
00000DD0  13FC 0001 0049A395      2213          move.b  #1,RIGHT_NOT_PRESSED
00000DD8  13FC 0001 0049A396      2214          move.b  #1,SPACE_NOT_PRESSED
00000DE0  13FC 0001 0049A397      2215          move.b  #1,UP_NOT_PRESSED
00000DE8                          2216  
00000DE8  23FC 000001E1 0049A3D2  2217          move.l #OBSTACLE_START_TOP_X+1,OBSTACLE1_TOP_X   
00000DF2  23FC 000001F4 0049A3D6  2218          move.l #OBSTACLE_START_TOP_Y,OBSTACLE1_TOP_Y      
00000DFC  23FC 00000208 0049A3DA  2219          move.l #OBSTACLE_START_BOTTOM_X,OBSTACLE1_BOTTOM_X  
00000E06  23FC 00000208 0049A3DE  2220          move.l #OBSTACLE_START_BOTTOM_Y,OBSTACLE1_BOTTOM_Y 
00000E10                          2221          
00000E10  23FC 000001E0 0049A3E2  2222          move.l #OBSTACLE_START_TOP_X,OBSTACLE2_TOP_X   
00000E1A  23FC 000001F4 0049A3E6  2223          move.l #OBSTACLE_START_TOP_Y,OBSTACLE2_TOP_Y      
00000E24  23FC 00000208 0049A3EA  2224          move.l #OBSTACLE_START_BOTTOM_X,OBSTACLE2_BOTTOM_X  
00000E2E  23FC 00000208 0049A3EE  2225          move.l #OBSTACLE_START_BOTTOM_Y,OBSTACLE2_BOTTOM_Y 
00000E38                          2226          
00000E38  23FC 000001E0 0049A3F2  2227          move.l #OBSTACLE_START_TOP_X,INVAL1_TOP_X   
00000E42  23FC 000001F4 0049A3F6  2228          move.l #OBSTACLE_START_TOP_Y,INVAL1_TOP_Y      
00000E4C  23FC 00000208 0049A3FA  2229          move.l #OBSTACLE_START_BOTTOM_X,INVAL1_BOTTOM_X  
00000E56  23FC 000001F6 0049A3FE  2230          move.l #OBSTACLE_START_TOP_Y+2,INVAL1_BOTTOM_Y 
00000E60                          2231  
00000E60  23FC 000001E0 0049A402  2232          move.l #OBSTACLE_START_TOP_X,INVAL2_TOP_X   
00000E6A  23FC 000001F4 0049A406  2233          move.l #OBSTACLE_START_TOP_Y,INVAL2_TOP_Y      
00000E74  23FC 00000208 0049A40A  2234          move.l #OBSTACLE_START_BOTTOM_X,INVAL2_BOTTOM_X  
00000E7E  23FC 000001F6 0049A40E  2235          move.l #OBSTACLE_START_TOP_Y+2,INVAL2_BOTTOM_Y 
00000E88                          2236          
00000E88  23FC 00000000 0049A432  2237          move.l #0,GENERATE_GAP_COUNTER_SMALL
00000E92  23FC 00000000 0049A436  2238          move.l #0,GENERATE_GAP_COUNTER_BIG
00000E9C  23FC 00000000 0049A446  2239          move.l  #0,COLLISION_COUNTER
00000EA6  23FC 00000000 0049A44A  2240          move.l  #0,RESET_TIMER    
00000EB0                          2241          
00000EB0  4EB9 00000F88           2242          jsr     getRandomLongIntoD6
00000EB6  2206                    2243          move.l  d6,d1
00000EB8  0281 00FFFFFF           2244          andi.l   #$00FFFFFF,d1 
00000EBE  23C1 0049A456           2245          move.l  d1,PLAYER_FILL_COLOR
00000EC4                          2246  
00000EC4                          2247  
00000EC4                          2248  resetLoop1:  
00000EC4  4EB8 0560               2249          jsr     updateObstacle1
00000EC8                          2250          
00000EC8  2039 0049A44A           2251          move.l  RESET_TIMER,d0
00000ECE  5280                    2252          addi.l  #1,d0
00000ED0  23C0 0049A44A           2253          move.l  d0,RESET_TIMER
00000ED6                          2254          
00000ED6  2200                    2255          move.l  d0,d1
00000ED8  E081                    2256          asr.l   #8,d1
00000EDA  E081                    2257          asr.l   #8,d1
00000EDC  E881                    2258          asr.l   #4,d1
00000EDE                          2259          
00000EDE  0C81 00000001           2260          cmpi.l  #1,d1 
00000EE4  66DE                    2261          bne     resetLoop1
00000EE6  23FC 00000000 0049A44A  2262          move.l  #0,RESET_TIMER
00000EF0                          2263                        
00000EF0  4CDF 7FFF               2264          movem.l (sp)+,ALL_REG
00000EF4  4E75                    2265          rts
00000EF6                          2266  
00000EF6                          2267      
00000EF6                          2268  collisionDetection:
00000EF6                          2269      
00000EF6  48E7 FFFE               2270      movem.l ALL_REG,-(sp)
00000EFA                          2271      
00000EFA  2039 0049A374           2272      move.l  PLAYER_POSITION_Y,d0
00000F00  0C80 0000026C           2273      cmpi.l  #GROUND,d0
00000F06  6700 FDBC               2274      beq     continue1
00000F0A                          2275      
00000F0A  0C80 0000026B           2276      cmpi.l  #GROUND-1,d0
00000F10  6700 FDB2               2277      beq     continue1
00000F14                          2278      
00000F14  0C80 0000026A           2279      cmpi.l  #GROUND-2,d0
00000F1A  6700 FDA8               2280      beq     continue1
00000F1E                          2281      
00000F1E  0C80 00000269           2282      cmpi.l  #GROUND-3,d0
00000F24  6700 FD9E               2283      beq     continue1
00000F28                          2284          
00000F28  0C80 00000268           2285      cmpi.l  #GROUND-4,d0
00000F2E  6700 FD94               2286      beq     continue1
00000F32                          2287      
00000F32  0C80 00000267           2288      cmpi.l  #GROUND-5,d0
00000F38  6700 FD8A               2289      beq     continue1
00000F3C                          2290      
00000F3C  0C80 00000266           2291      cmpi.l  #GROUND-6,d0
00000F42  6700 FD80               2292      beq     continue1
00000F46                          2293      
00000F46  0C80 00000265           2294      cmpi.l  #GROUND-7,d0
00000F4C  6700 FD76               2295      beq     continue1
00000F50                          2296      
00000F50  0C80 00000264           2297      cmpi.l  #GROUND-8,d0
00000F56  6700 FD6C               2298      beq     continue1
00000F5A                          2299      
00000F5A  0C80 00000263           2300      cmpi.l  #GROUND-9,d0
00000F60  6700 FD62               2301      beq     continue1
00000F64                          2302      
00000F64  4CDF 7FFF               2303      movem.l (sp)+,ALL_REG
00000F68  4E75                    2304      rts
00000F6A                          2305      
00000F6A                          2306  
00000F6A                          2307  
00000F6A                          2308  
00000F6A                          2309  
00000F6A                          2310  
00000F6A                          2311  
00000F6A                          2312  
00000F6A                          2313  
00000F6A                          2314  
00000F6A                          2315  
00000F6A                          2316  
00000F6A                          2317  
00000F6A                          2318  
00000F6A                          2319  
00000F6A                          2320  
00000F6A                          2321  
00000F6A                          2322  
00000F6A                          2323  
00000F6A                          2324  
00000F6A                          2325  
00000F6A                          2326  
00000F6A                          2327  
00000F6A                          2328  
00000F6A                          2329  
00000F6A                          2330  
00000F6A                          2331  
00000F6A                          2332  
00000F6A                          2333  
00000F6A                          2334  
00000F6A                          2335  
00000F6A                          2336  
00000F6A                          2337  
00000F6A                          2338  
00000F6A                          2339  
00000F6A                          2340  
00000F6A                          2341  
00000F6A                          2342  
00000F6A                          2343  
00000F6A                          2344  
00000F6A                          2345  
00000F6A                          2346  
00000F6A                          2347  
00000F6A                          2348  
00000F6A                          2349  
00000F6A                          2350  
00000F6A                          2351  
00000F6A                          2352  
00000F6A                          2353  
00000F6A                          2354  -------------------- end include --------------------
00000F6A                          2355      INCLUDE     "GetRandomVal.x68"
00000F6A                          2356  
00000F6A                          2357  seedRandomNumber
00000F6A  48E7 FFFE               2358          movem.l ALL_REG,-(sp)
00000F6E  4286                    2359          clr.l   d6
00000F70  103C 0008               2360          move.b  #GET_TIME_COMMAND,d0
00000F74  4E4F                    2361          TRAP    #15
00000F76  2C01                    2362          move.l  d1,d6
00000F78  CCFC 5678               2363          mulu    #LARGE_NUMBER,d6
00000F7C  23C6 0049A44E           2364          move.l  d6,RANDOMVAL
00000F82  4CDF 7FFF               2365          movem.l (sp)+,ALL_REG
00000F86  4E75                    2366          rts
00000F88                          2367  
00000F88                          2368  getRandomLongIntoD6
00000F88  48E7 8000               2369          movem.l d0,-(sp)
00000F8C  48E7 4000               2370          movem.l d1,-(sp)
00000F90  2C39 0049A44E           2371          move.l  RANDOMVAL,d6
00000F96  CCFC 5678               2372          mulu    #LARGE_NUMBER,d6
00000F9A  701F                    2373          move.l  #31,d0
00000F9C  4E4F                    2374          TRAP    #15
00000F9E  CCC1                    2375          mulu    d1,d6
00000FA0  6500 0004               2376          bcs     nocarry
00000FA4  5286                    2377          add.l   #1,d6
00000FA6                          2378  nocarry
00000FA6  23C6 0049A44E           2379          move.l  d6,RANDOMVAL
00000FAC  4CDF 0002               2380          movem.l (sp)+,d1
00000FB0  4CDF 0001               2381          movem.l (sp)+,d0
00000FB4  4E75                    2382          rts
00000FB6                          2383  
00000FB6                          2384  
00000FB6                          2385  getRandomByteIntoD6
00000FB6  48E7 FFFE               2386          movem.l ALL_REG,-(sp)
00000FBA  4EB8 0F88               2387          jsr     getRandomLongIntoD6
00000FBE  103C 0008               2388          move.b  #GET_TIME_COMMAND,d0
00000FC2  4E4F                    2389          TRAP    #15
00000FC4  0241 0007               2390          andi    #7,d1
00000FC8  E26E                    2391          lsr     d1,d6
00000FCA  23C6 0049A452           2392          move.l  d6,TEMPRANDOMLONG
00000FD0  4CDF 7FFF               2393          movem.l (sp)+,ALL_REG
00000FD4  2C39 0049A452           2394          move.l  TEMPRANDOMLONG,d6
00000FDA  4E75                    2395          rts
00000FDC                          2396          
00000FDC  48E7 FFFE               2397          movem.l ALL_REG,-(sp)
00000FE0  4EB8 0FB6               2398          jsr     getRandomByteIntoD6
00000FE4  1A06                    2399          move.b  d6,d5
00000FE6  4EB8 0FB6               2400          jsr     getRandomByteIntoD6
00000FEA  E18D                    2401          lsl.l   #8,d5
00000FEC  1A06                    2402          move.b  d6,d5
00000FEE  4EB8 0FB6               2403          jsr     getRandomByteIntoD6
00000FF2  E18D                    2404          lsl.l   #8,d5
00000FF4  1A06                    2405          move.b  d6,d5
00000FF6  4EB8 0FB6               2406          jsr     getRandomByteIntoD6
00000FFA  E18D                    2407          lsl.l   #8,d5
00000FFC  1A06                    2408          move.b  d6,d5
00000FFE  23C5 0049A452           2409          move.l  d5,TEMPRANDOMLONG
00001004  4CDF 7FFF               2410          movem.l (sp)+,ALL_REG
00001008  2C39 0049A452           2411          move.l  TEMPRANDOMLONG,d6
0000100E  4E75                    2412          rts
00001010                          2413  
00001010                          2414  setRandomFillColor
00001010  48E7 FFFE               2415          movem.l ALL_REG,-(sp)
00001014  4EB8 0F88               2416          jsr     getRandomLongIntoD6
00001018  2206                    2417          move.l  d6,d1
0000101A  0281 00FFFFFF           2418          andi.l   #$00FFFFFF,d1
00001020                          2419  
00001020  103C 0051               2420          move.b  #81,d0
00001024  4E4F                    2421          TRAP    #15
00001026  4CDF 7FFF               2422          movem.l (sp)+,ALL_REG
0000102A  4E75                    2423          rts
0000102C                          2424                  
0000102C                          2425  
0000102C                          2426  
0000102C                          2427  
0000102C                          2428  
0000102C                          2429  
0000102C                          2430  -------------------- end include --------------------
0000102C                          2431              
00001000                          2432  START  ORG    $1000
00001000                          2433  
00001000                          2434  *        lea     SOUNDSTRING,a1
00001000                          2435  *        move.l  #0,d1
00001000                          2436  *        move.l  #0,d2
00001000                          2437  *        move.l  #73,d0
00001000                          2438  *        TRAP    #15
00001000                          2439   
00001000                          2440      *   set output screen resolution    
00001000  103C 0021               2441          move.b  #SET_SCREEN_RESOLUTION_TRAP_CODE,D0
00001004  223C 00000400           2442          move.l  #SCREEN_WIDTH,d1
0000100A  4841                    2443          swap.w  d1
0000100C  323C 0300               2444          move.w  #SCREEN_HEIGHT,d1
00001010  4E4F                    2445          trap    #15
00001012                          2446          
00001012                          2447          *******************************************  
00001012                          2448          
00001012  23FC 00000190 0049A358  2449          move.l  #400,(SCREEN_OFFSET_X)
0000101C  23FC 000000C8 0049A35C  2450          move.l  #200,(SCREEN_OFFSET_Y)
00001026                          2451          
00001026  23FC 00000000 0049A360  2452          move.l  #0,(IMAGE_START_X)
00001030  23FC 00000000 0049A364  2453          move.l  #0,(IMAGE_START_Y)
0000103A                          2454          
0000103A  23FC 000000EF 0049A368  2455          move.l  #239,(IMAGE_END_X)
00001044  23FC 00000047 0049A36C  2456          move.l  #71,(IMAGE_END_Y)
0000104E                          2457          
0000104E  41F9 00001318           2458          lea     LoadingImage,a0
00001054  4EB8 0124               2459          jsr     renderImage
00001058                          2460                     
00001058                          2461          *******************************************  
00001058                          2462          
00001058  23FC 00000000 0049A358  2463          move.l  #0,(SCREEN_OFFSET_X)
00001062  23FC 00000000 0049A35C  2464          move.l  #0,(SCREEN_OFFSET_Y)
0000106C                          2465          
0000106C  23FC 00000000 0049A360  2466          move.l  #0,(IMAGE_START_X)
00001076  23FC 00000000 0049A364  2467          move.l  #0,(IMAGE_START_Y)
00001080                          2468          
00001080  23FC 00000400 0049A368  2469          move.l  #1024,(IMAGE_END_X)
0000108A  23FC 00000300 0049A36C  2470          move.l  #768,(IMAGE_END_Y)
00001094                          2471  
00001094                          2472          
00001094  41F9 0000DB00           2473          lea     BackGroundImage,a0
0000109A                          2474          
0000109A                          2475          ; Draw the image in the second buffer
0000109A  103C 005C               2476          move.b  #SET_SCREEN_BUFFER_MODE,d0
0000109E  7211                    2477          move.l  #ENABLE_DOUBLE_BUFFER_MODE,d1
000010A0  4E4F                    2478          trap    #15
000010A2                          2479                  
000010A2  4EB8 0124               2480          jsr renderImage
000010A6                          2481  
000010A6                          2482          *********************************************
000010A6                          2483          
000010A6  103C 005E               2484          move.b  #DUMP_SCREEN_BUFFER,d0
000010AA  4E4F                    2485          trap    #15
000010AC                          2486          
000010AC                          2487  *        move.b  #SET_SCREEN_BUFFER_MODE,d0
000010AC                          2488  *        move.l  #DISBALE_DOUBLE_BUFFER_MODE,d1
000010AC                          2489  *        trap    #15
000010AC                          2490  *                
000010AC                          2491          ;set pen color
000010AC  223C 00FFFFFF           2492          move.l  #$00ffffff,d1
000010B2  103C 0050               2493          move.b  #80,d0
000010B6  4E4F                    2494          trap    #15
000010B8                          2495          
000010B8                          2496          ;set fill color
000010B8  223C 00AAAAAA           2497          move.l  #$00AAAAAA,d1
000010BE  103C 0051               2498          move.b  #81,d0
000010C2  4E4F                    2499          trap    #15
000010C4                          2500  
000010C4                          2501  ;Initialize Player Position
000010C4  23FC 000001F4 0049A370  2502          move.l  #500,(PLAYER_POSITION_X)
000010CE  23FC 000001F4 0049A374  2503          move.l  #500,(PLAYER_POSITION_Y)
000010D8                          2504          
000010D8  23FC 00000000 0049A398  2505          move.l  #0,LEFT_KEY_COUNTER
000010E2  23FC 00000000 0049A39C  2506          move.l  #0,RIGHT_KEY_COUNTER
000010EC  23FC 00000000 0049A3AE  2507          move.l  #0,PREVIOUS_SPEED
000010F6  23FC 00000000 0049A3A2  2508          move.l  #0,YDELTA
00001100  23FC 00000000 0049A3B2  2509          move.l  #0,OBSTACLE1_COUNTER
0000110A  23FC 00000000 0049A3B6  2510          move.l  #0,OBSTACLE2_COUNTER
00001114                          2511          
00001114  13FC 0001 0049A394      2512          move.b  #1,LEFT_NOT_PRESSED  
0000111C  13FC 0001 0049A395      2513          move.b  #1,RIGHT_NOT_PRESSED
00001124  13FC 0001 0049A396      2514          move.b  #1,SPACE_NOT_PRESSED
0000112C  13FC 0001 0049A397      2515          move.b  #1,UP_NOT_PRESSED
00001134                          2516  
00001134  23FC 000001E0 0049A3D2  2517          move.l #OBSTACLE_START_TOP_X,OBSTACLE1_TOP_X   
0000113E  23FC 000001F4 0049A3D6  2518          move.l #OBSTACLE_START_TOP_Y,OBSTACLE1_TOP_Y      
00001148  23FC 00000208 0049A3DA  2519          move.l #OBSTACLE_START_BOTTOM_X,OBSTACLE1_BOTTOM_X  
00001152  23FC 00000208 0049A3DE  2520          move.l #OBSTACLE_START_BOTTOM_Y,OBSTACLE1_BOTTOM_Y 
0000115C                          2521          
0000115C  23FC 000001E0 0049A3E2  2522          move.l #OBSTACLE_START_TOP_X,OBSTACLE2_TOP_X   
00001166  23FC 000001F4 0049A3E6  2523          move.l #OBSTACLE_START_TOP_Y,OBSTACLE2_TOP_Y      
00001170  23FC 00000208 0049A3EA  2524          move.l #OBSTACLE_START_BOTTOM_X,OBSTACLE2_BOTTOM_X  
0000117A  23FC 00000208 0049A3EE  2525          move.l #OBSTACLE_START_BOTTOM_Y,OBSTACLE2_BOTTOM_Y 
00001184                          2526          
00001184  23FC 000001E0 0049A3F2  2527          move.l #OBSTACLE_START_TOP_X,INVAL1_TOP_X   
0000118E  23FC 000001F4 0049A3F6  2528          move.l #OBSTACLE_START_TOP_Y,INVAL1_TOP_Y      
00001198  23FC 00000208 0049A3FA  2529          move.l #OBSTACLE_START_BOTTOM_X,INVAL1_BOTTOM_X  
000011A2  23FC 000001F6 0049A3FE  2530          move.l #OBSTACLE_START_TOP_Y+2,INVAL1_BOTTOM_Y 
000011AC                          2531  
000011AC  23FC 000001E0 0049A402  2532          move.l #OBSTACLE_START_TOP_X,INVAL2_TOP_X   
000011B6  23FC 000001F4 0049A406  2533          move.l #OBSTACLE_START_TOP_Y,INVAL2_TOP_Y      
000011C0  23FC 00000208 0049A40A  2534          move.l #OBSTACLE_START_BOTTOM_X,INVAL2_BOTTOM_X  
000011CA  23FC 000001F6 0049A40E  2535          move.l #OBSTACLE_START_TOP_Y+2,INVAL2_BOTTOM_Y 
000011D4                          2536          
000011D4  23FC 00000000 0049A432  2537          move.l #0,GENERATE_GAP_COUNTER_SMALL
000011DE  23FC 00000000 0049A436  2538          move.l #0,GENERATE_GAP_COUNTER_BIG
000011E8                          2539          
000011E8  23FC 00000000 0049A43A  2540          move.l  #0,SCORE_COUNTER
000011F2  23FC 00000000 0049A43E  2541          move.l  #0,ACTUAL_SCORE
000011FC                          2542          
000011FC                          2543          
000011FC  23FC 00000005 0049A442  2544          move.l  #5,PLAYER_LIVES
00001206  23FC 00000000 0049A446  2545          move.l  #0,COLLISION_COUNTER
00001210  23FC 00000000 0049A44A  2546          move.l  #0,RESET_TIMER
0000121A                          2547          
0000121A  2A39 0049A442           2548          move.l  PLAYER_LIVES,d5
00001220  2F05                    2549          move.l  d5,-(sp)
00001222  2F3C 00000390           2550          move.l  #PLAYER_LIVES_LOCATION_X,-(sp)
00001228  4EB8 0B60               2551          jsr     displayScore
0000122C  504F                    2552          add     #8,sp
0000122E                          2553          
0000122E                          2554  initializeGame:
0000122E                          2555      
0000122E  23FC 000001E1 0049A3D2  2556      move.l #OBSTACLE_START_TOP_X+1,OBSTACLE1_TOP_X 
00001238                          2557      
00001238  23FC 000001F4 0049A370  2558      move.l  #500,(PLAYER_POSITION_X)
00001242  23FC 00000258 0049A374  2559      move.l  #600,(PLAYER_POSITION_Y)
0000124C                          2560      
0000124C                          2561    
0000124C  4EB8 0F88               2562      jsr     getRandomLongIntoD6
00001250  2206                    2563      move.l  d6,d1
00001252  0281 00FFFFFF           2564      andi.l   #$00FFFFFF,d1 
00001258  23C1 0049A456           2565      move.l  d1,PLAYER_FILL_COLOR
0000125E                          2566  
0000125E                          2567  resetLoop:  
0000125E  4EB8 0560               2568          jsr     updateObstacle1
00001262                          2569          
00001262  2039 0049A44A           2570          move.l  RESET_TIMER,d0
00001268  5280                    2571          addi.l  #1,d0
0000126A  23C0 0049A44A           2572          move.l  d0,RESET_TIMER
00001270                          2573          
00001270  2200                    2574          move.l  d0,d1
00001272  E081                    2575          asr.l   #8,d1
00001274  E081                    2576          asr.l   #8,d1
00001276  E881                    2577          asr.l   #4,d1
00001278                          2578          
00001278  0C81 00000001           2579          cmpi.l  #1,d1 
0000127E  66DE                    2580          bne     resetLoop
00001280  23FC 00000000 0049A44A  2581          move.l  #0,RESET_TIMER
0000128A                          2582          
0000128A                          2583  gameLoop:
0000128A  4EB8 024A               2584           jsr handleInput
0000128E  4EB8 0990               2585           jsr gapGenerator1
00001292  4EB8 09F6               2586           jsr nextObstacleGenerator1
00001296                          2587  *         jsr gapGenerator2
00001296                          2588  *         jsr nextObstacleGenerator2
00001296  4EB8 0560               2589           jsr updateObstacle1
0000129A  4EB8 0622               2590           jsr updateObstacle2
0000129E  4EB8 06EA               2591           jsr updateInval1
000012A2  4EB8 07B2               2592           jsr updateInval2
000012A6  4EB8 03CC               2593           jsr updatePlayerPosition
000012AA  4EB8 0488               2594           jsr renderPlayer
000012AE  4EB8 0B3A               2595           jsr updateScore
000012B2  4EB8 0EF6               2596           jsr collisionDetection
000012B6                          2597           
000012B6  2039 0049A442           2598           move.l PLAYER_LIVES,d0
000012BC  0C80 00000000           2599           cmpi.l #0,d0
000012C2  66C6                    2600           bne gameLoop
000012C4                          2601  
000012C4                          2602   ;display game over screen
000012C4                          2603        *******************************************  
000012C4                          2604          
000012C4  23FC 00000190 0049A358  2605          move.l  #400,(SCREEN_OFFSET_X)
000012CE  23FC 000000C8 0049A35C  2606          move.l  #200,(SCREEN_OFFSET_Y)
000012D8                          2607          
000012D8  23FC 00000000 0049A360  2608          move.l  #0,(IMAGE_START_X)
000012E2  23FC 00000000 0049A364  2609          move.l  #0,(IMAGE_START_Y)
000012EC                          2610          
000012EC  23FC 000000EF 0049A368  2611          move.l  #239,(IMAGE_END_X)
000012F6  23FC 00000047 0049A36C  2612          move.l  #71,(IMAGE_END_Y)
00001300                          2613          
00001300  41F9 0048DB70           2614          lea     GameOverScreen,a0
00001306  4EB8 0124               2615          jsr     renderImage
0000130A                          2616          
0000130A  103C 005E               2617          move.b  #DUMP_SCREEN_BUFFER,d0
0000130E  4E4F                    2618          trap    #15
00001310                          2619                  
00001310  7009                    2620          move.l #KILL_PROGRAM, d0
00001312  4E4F                    2621          TRAP    #15
00001314                          2622          
00001314  4E72 2000               2623          STOP    #$2000
00001318                          2624      
00001318                          2625      
00001318                          2626  
00001318                          2627  LoadingImage        INCBIN  "Images/loading.bmp"
0000DB00                          2628  BackGroundImage     INCBIN  "Images/backGround.bmp" 
0024DB38                          2629  BackGroundImage2    INCBIN  "Images/background_withObstacle.bmp"
0048DB70                          2630  GameOverScreen      INCBIN  "Images/gameOver.bmp"
0049A358                          2631       
0049A358                          2632  SCREEN_OFFSET_X         ds.l  1
0049A35C                          2633  SCREEN_OFFSET_Y         ds.l  1 
0049A360                          2634  
0049A360                          2635  IMAGE_START_X    ds.l   1
0049A364                          2636  IMAGE_START_Y    ds.l   1
0049A368                          2637  
0049A368                          2638  IMAGE_END_X      ds.l   1
0049A36C                          2639  IMAGE_END_Y      ds.l   1
0049A370                          2640  
0049A370                          2641  PLAYER_POSITION_X      ds.l     1
0049A374                          2642  PLAYER_POSITION_Y      ds.l     1
0049A378                          2643  
0049A378= 53 6F 75 6E 64 73 ...   2644  SOUNDSTRING         dc.b    'Sounds/backGroundMusic.wav',0
0049A393                          2645  
0049A393                          2646  HAVE_HAD_NO_INPUT      ds.b     1
0049A394                          2647  
0049A394                          2648  LEFT_NOT_PRESSED        ds.b    1
0049A395                          2649  RIGHT_NOT_PRESSED       ds.b    1
0049A396                          2650  SPACE_NOT_PRESSED       ds.b    1
0049A397                          2651  UP_NOT_PRESSED       ds.b    1
0049A398                          2652  
0049A398                          2653  LEFT_KEY_COUNTER        ds.l    1
0049A39C                          2654  RIGHT_KEY_COUNTER       ds.l    1
0049A3A0                          2655  
0049A3A0                          2656  INPUT_COUNTER          ds.b     1
0049A3A1                          2657  
0049A3A2                          2658  YDELTA                 ds.l     1
0049A3A6                          2659  YDELTA_COUNTER         ds.l     1
0049A3AA                          2660  CURRENT_SPEED          ds.l     1
0049A3AE                          2661  PREVIOUS_SPEED         ds.l     1
0049A3B2                          2662  
0049A3B2                          2663  OBSTACLE1_COUNTER        ds.l    1
0049A3B6                          2664  OBSTACLE2_COUNTER        ds.l    1
0049A3BA                          2665  INVAL1_COUNTER           ds.l    1
0049A3BE                          2666  INVAL2_COUNTER           ds.l    1
0049A3C2                          2667  
0049A3C2                          2668  
0049A3C2                          2669  OBSTACLE_START_X        ds.l    1
0049A3C6                          2670  OBSTACLE_START_Y        ds.l    1
0049A3CA                          2671  OBSTACLE_START_WIDTH    ds.l    1
0049A3CE                          2672  OBSTACLE_START_HEIGHT   ds.l    1
0049A3D2                          2673  
0049A3D2                          2674  OBSTACLE1_TOP_X      ds.l    1
0049A3D6                          2675  OBSTACLE1_TOP_Y      ds.l    1
0049A3DA                          2676  OBSTACLE1_BOTTOM_X  ds.l    1
0049A3DE                          2677  OBSTACLE1_BOTTOM_Y  ds.l    1
0049A3E2                          2678  
0049A3E2                          2679  OBSTACLE2_TOP_X      ds.l    1
0049A3E6                          2680  OBSTACLE2_TOP_Y      ds.l    1
0049A3EA                          2681  OBSTACLE2_BOTTOM_X  ds.l    1
0049A3EE                          2682  OBSTACLE2_BOTTOM_Y  ds.l    1
0049A3F2                          2683  
0049A3F2                          2684  INVAL1_TOP_X        ds.l    1
0049A3F6                          2685  INVAL1_TOP_Y        ds.l    1
0049A3FA                          2686  INVAL1_BOTTOM_X     ds.l    1
0049A3FE                          2687  INVAL1_BOTTOM_Y     ds.l    1
0049A402                          2688  
0049A402                          2689  INVAL2_TOP_X        ds.l    1
0049A406                          2690  INVAL2_TOP_Y        ds.l    1
0049A40A                          2691  INVAL2_BOTTOM_X     ds.l    1
0049A40E                          2692  INVAL2_BOTTOM_Y     ds.l    1
0049A412                          2693  
0049A412                          2694  
0049A412                          2695  OBSTACLE_INVAL_START_X        ds.l    1
0049A416                          2696  OBSTACLE_INVAL_START_Y        ds.l    1
0049A41A                          2697  OBSTACLE_INVAL_START_WIDTH    ds.l    1
0049A41E                          2698  OBSTACLE_INVAL_START_HEIGHT   ds.l    1
0049A422                          2699  
0049A422                          2700  OBSTACLE_INVAL_CURRENT_TOP_X      ds.l    1
0049A426                          2701  OBSTACLE_INVAL_CURRENT_TOP_Y      ds.l    1
0049A42A                          2702  OBSTACLE_INVAL_CURRENT_BOTTOM_X  ds.l    1
0049A42E                          2703  OBSTACLE_INVAL_CURRENT_BOTTOM_Y  ds.l    1
0049A432                          2704  
0049A432                          2705  GENERATE_GAP_COUNTER_SMALL            ds.l    1
0049A436                          2706  GENERATE_GAP_COUNTER_BIG              ds.l    1
0049A43A                          2707  
0049A43A                          2708  SCORE_COUNTER               ds.l    1
0049A43E                          2709  ACTUAL_SCORE                ds.l    1
0049A442                          2710  
0049A442                          2711  PLAYER_LIVES                ds.l    1
0049A446                          2712  COLLISION_COUNTER           ds.l    1  
0049A44A                          2713  RESET_TIMER                 ds.l    1
0049A44E                          2714  
0049A44E                          2715  
0049A44E                          2716  RANDOMVAL           ds.l    1   
0049A452                          2717  TEMPRANDOMLONG  ds.l    1
0049A456                          2718       
0049A456                          2719  PLAYER_FILL_COLOR           ds.l    1
0049A45A                          2720  
0049A45A                          2721  IN_AIR                      ds.l    1
0049A45E                          2722    
0049A45E                          2723  
0049A45E                          2724  *SOUNDSING                   dc.b    'Sounds/backGroundMusic.wav',0
0049A45E                          2725  
0049A45E= 7E 30 6D 79 33 5B ...   2726  SEVEN_SEGMENT_TABLE    dc.b   $7E,$30,$6D,$79,$33,$5B,$5F,$70,$7F,$7B
0049A468                          2727  
0049A468                          2728  
0049A468                          2729  
0049A468                          2730  
0049A468                          2731  
0049A468                          2732  * Put variables and constants here
0049A468                          2733  
0049A468                          2734      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ACTUAL_SCORE        49A43E
ALL_REG             7FFF
AROUNDNOINPUT       2B4
BACKGROUNDIMAGE     DB00
BACKGROUNDIMAGE2    24DB38
BLACK               0
BLUE                FF0000
COLLISIONDETECTION  EF6
COLLISION_COUNTER   49A446
CONTINUE1           CC4
CONTINUE1A          2A
CONTINUE1B          34
CONTINUE1C          3E
CONTINUE1D          48
CONTINUE1E          52
CONTINUE1F          5C
CONTINUE1G          66
CONTINUE2           CD8
CONTINUE3           CEC
CONTINUE4           D14
CONTINUE5           D0E
CONTINUEA           B8A
CONTINUEB           B94
CONTINUEC           B9E
CONTINUECODE        186
CONTINUED           BA8
CONTINUEE           BB2
CONTINUEF           BBC
CONTINUEG           BC6
CONTINUEINVALUPDATE1  704
CONTINUEINVALUPDATE2  7CC
CONTINUELEFT        3E6
CONTINUELEFTINPUT   274
CONTINUERIGHT       3FC
CONTINUERIGHTINPUT  290
CONTINUESPACEINPUT  2A2
CONTINUEUPDATE1     57A
CONTINUEUPDATE2     63C
CONTINUEYDELTA      478
CURRENT_SPEED       49A3AA
DISBALE_DOUBLE_BUFFER_MODE  10
DISPLAYSCORE        B60
DRAW1SEGMENTA       72
DRAW1SEGMENTB       8A
DRAW1SEGMENTC       A8
DRAW1SEGMENTD       C8
DRAW1SEGMENTE       E2
DRAW1SEGMENTF       F6
DRAW1SEGMENTG       10A
DRAWIMAGE           210
DRAWOFFSETBITMAP    188
DRAWSEGMENTA        BD2
DRAWSEGMENTB        BEA
DRAWSEGMENTC        C08
DRAWSEGMENTD        C28
DRAWSEGMENTE        C42
DRAWSEGMENTF        C56
DRAWSEGMENTG        C6A
DRAW_FILLED_RECTANGLE_TRAP  57
DRAW_PIXEL_TRAP_CODE  52
DRAW_UNFILLED_RECTANGLE_TRAP  59
DUMP_SCREEN_BUFFER  5E
ENABLE_DOUBLE_BUFFER_MODE  11
GAMELOOP            128A
GAMEOVERSCREEN      48DB70
GAPGENERATOR1       990
GAPGENERATOR2       A1C
GENERATEGAP1        9B8
GENERATEGAP2        A44
GENERATE_GAP_COUNTER_BIG  49A436
GENERATE_GAP_COUNTER_SMALL  49A432
GETRANDOMBYTEINTOD6  FB6
GETRANDOMLONGINTOD6  F88
GET_TIME_COMMAND    8
GET_USER_INPUT_COMMAND  13
GRAVITY             1
GRAVITYSTART        3FC
GREEN               FF00
GROUND              26C
HANDLEINPUT         24A
HANDLELEFTINPUT     2DA
HANDLERIGHTINPUT    2FC
HANDLESPACEINPUT    31E
HANDLEUPINPUT       356
HAVE_HAD_NO_INPUT   49A393
HEIGHT              180
IMAGE_END_X         49A368
IMAGE_END_Y         49A36C
IMAGE_START_X       49A360
IMAGE_START_Y       49A364
INCREMENTGAPCOUNTER1  982
INCREMENTGAPCOUNTER2  A0E
INCREMENTLEFTCOUNTER  2BA
INCREMENTRIGHTCOUNTER  2CA
INITIALIZEGAME      122E
INITIALIZEGAME1     D78
INITIALIZEINVAL1    6B6
INITIALIZEINVAL2    77E
INITIALIZEOBSTACLE1  532
INITIALIZEOBSTACLE2  5F4
INPUT_COUNTER       49A3A0
INVAL1_BOTTOM_X     49A3FA
INVAL1_BOTTOM_Y     49A3FE
INVAL1_COUNTER      49A3BA
INVAL1_TOP_X        49A3F2
INVAL1_TOP_Y        49A3F6
INVAL2_BOTTOM_X     49A40A
INVAL2_BOTTOM_Y     49A40E
INVAL2_COUNTER      49A3BE
INVAL2_TOP_X        49A402
INVAL2_TOP_Y        49A406
INVALIDATEOBSTACLE1  8C6
INVALIDATEOBSTACLE2  924
INVALIDATEPLAYER    4D4
IN_AIR              49A45A
JUMP_MAGNITUDE      10
KEY_LEFT_INPUT      25
KEY_RIGHT_INPUT     27
KEY_SPACE_INPUT     20
KEY_UP_INPUT        26
KILL_PROGRAM        9
LARGE_NUMBER        5678
LARGE_NUMBER1       1234
LEFT_KEY_COUNTER    49A398
LEFT_NOT_PRESSED    49A394
LEFT_X              0
LOADINGIMAGE        1318
MOVEINVAL1          726
MOVEINVAL2          7EE
MOVELEFT            36E
MOVEOBSTACLE1       59C
MOVEOBSTACLE2       65E
MOVERIGHT           38E
MOVE_LINE_TRAP      54
NEXTOBSTACLEGENERATOR1  9F6
NEXTOBSTACLEGENERATOR2  A82
NOCARRY             FA6
OBSTACLE1_BOTTOM_X  49A3DA
OBSTACLE1_BOTTOM_Y  49A3DE
OBSTACLE1_COUNTER   49A3B2
OBSTACLE1_TOP_X     49A3D2
OBSTACLE1_TOP_Y     49A3D6
OBSTACLE2_BOTTOM_X  49A3EA
OBSTACLE2_BOTTOM_Y  49A3EE
OBSTACLE2_COUNTER   49A3B6
OBSTACLE2_TOP_X     49A3E2
OBSTACLE2_TOP_Y     49A3E6
OBSTACLE_INVAL_CURRENT_BOTTOM_X  49A42A
OBSTACLE_INVAL_CURRENT_BOTTOM_Y  49A42E
OBSTACLE_INVAL_CURRENT_TOP_X  49A422
OBSTACLE_INVAL_CURRENT_TOP_Y  49A426
OBSTACLE_INVAL_START_HEIGHT  49A41E
OBSTACLE_INVAL_START_WIDTH  49A41A
OBSTACLE_INVAL_START_X  49A412
OBSTACLE_INVAL_START_Y  49A416
OBSTACLE_SPEED_FRACTION  4
OBSTACLE_START_BOTTOM_X  208
OBSTACLE_START_BOTTOM_Y  208
OBSTACLE_START_HEIGHT  49A3CE
OBSTACLE_START_TOP_X  1E0
OBSTACLE_START_TOP_Y  1F4
OBSTACLE_START_WIDTH  49A3CA
OBSTACLE_START_X    49A3C2
OBSTACLE_START_Y    49A3C6
OFFSET_X            0
OFFSET_Y            0
OUTPUT_HEIGHT       300
OUTPUT_WIDTH        400
PEN_COLOR_TRAP_CODE  50
PLAYER_FILL_COLOR   49A456
PLAYER_HEIGHT       A
PLAYER_LIVES        49A442
PLAYER_LIVES_LOCATION_X  390
PLAYER_POSITION_X   49A370
PLAYER_POSITION_Y   49A374
PLAYER_SPEED        5
PLAYER_WIDTH        1E
PREVIOUS_SPEED      49A3AE
PRINT_NUMBER        3
PRINT_STRING_NO_CR  E
RANDOMVAL           49A44E
RECT_COLOR          FF
RED                 FF
RENDERIMAGE         124
RENDEROBSTACLE1     846
RENDEROBSTACLE2     886
RENDERPLAYER        488
RENDERSCORE         0
RESETLOOP           125E
RESETLOOP1          EC4
RESETYDELTA         3BC
RESET_TIMER         49A44A
RETURNOBSTACLEGENERATOR1  A08
RETURNOBSTACLEGENERATOR2  A94
RIGHT_KEY_COUNTER   49A39C
RIGHT_NOT_PRESSED   49A395
SCORE_COUNTER       49A43A
SCORE_DISPLAY_LOCATION_Y  2CA
SCORE_HUNDREDS_LOCATION_X  C8
SCORE_ONES_LOCATION_X  E6
SCORE_TENS_LOCATION_X  D7
SCORE_THOUSANDS_LOCATION_X  B9
SCREEN_HEIGHT       300
SCREEN_OFFSET_X     49A358
SCREEN_OFFSET_Y     49A35C
SCREEN_WIDTH        400
SEEDRANDOMNUMBER    F6A
SEGMENT_COLOR       FFFFFF
SEGMENT_SIZE        A
SETRANDOMFILLCOLOR  1010
SET_FILL_COLOR_TRAP  51
SET_OUTPUT_RESOLUTION_TRAP_CODE  21
SET_PEN_COLOR_TRAP  50
SET_SCREEN_BUFFER_MODE  5C
SET_SCREEN_RESOLUTION_TRAP_CODE  21
SEVEN_SEGMENT_TABLE  49A45E
SKIPBYTES_FOR_STARTOFDATA  A
SOUNDSTRING         49A378
SPACE_NOT_PRESSED   49A396
START               1000
STARTNEXTOBSTACLE1  9D6
STARTNEXTOBSTACLE2  A62
TEMPRANDOMLONG      49A452
TOP_Y               0
UPDATEINVAL1        6EA
UPDATEINVAL2        7B2
UPDATEOBSTACLE1     560
UPDATEOBSTACLE2     622
UPDATEPLAYERPOSITION  3CC
UPDATESCORE         B3A
UPDATESCORENOW      A9A
UPDATEYDELTA        424
UP_NOT_PRESSED      49A397
WHITE               FFFFFF
WIDTH               100
WIPEOUTPREVLIVES    D34
WIPEOUTPREVSCORE    C84
YDELTA              49A3A2
YDELTA_COUNTER      49A3A6
